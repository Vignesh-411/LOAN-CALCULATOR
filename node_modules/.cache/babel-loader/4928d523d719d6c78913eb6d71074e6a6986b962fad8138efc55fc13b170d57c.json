{"ast":null,"code":"var _jsxFileName = \"P:\\\\New folder\\\\model\\\\src\\\\COMPONENTS\\\\HOME.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   Box,\n//   Typography,\n//   TextField,\n//   Button,\n//   MenuItem,\n//   Card,\n//   CardContent,\n//   Paper,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   Pagination,\n//   Grid,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n// } from \"@mui/material\";\n// import axios from \"axios\";\n// import { useTheme } from \"@mui/material/styles\"; \n\n// function HOME() {\n//   const theme = useTheme();\n\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n//   const [exchangeRates, setExchangeRates] = useState({});\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\n//   const [page, setPage] = useState(1);\n\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n\n//   useEffect(() => {\n//     axios\n//       .get(\n//         \"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\"\n//       )\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\n//   }, []);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount,\n//         principal: principalPayment,\n//         interest: interestPayment,\n//         balance: balance,\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//     setPage(1);\n//   };\n\n//   const handleCurrencyChange = (e) => {\n//     setSelectedCurrency(e.target.value);\n//   };\n\n//   const handleChangeEntries = (e) => {\n//     setEntriesPerPage(parseInt(e.target.value));\n//     setPage(1);\n//   };\n\n//   const handlePageChange = (_, value) => {\n//     setPage(value);\n//   };\n\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\n\n//   const paginatedEntries = amortizationSchedule.slice(\n//     (page - 1) * entriesPerPage,\n//     page * entriesPerPage\n//   );\n\n//   return (\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\n//       <CardContent>\n//         <Typography variant=\"h4\" gutterBottom align=\"center\">\n//           Loan EMI Calculator\n//         </Typography>\n\n//         <Grid container spacing={2} justifyContent=\"center\">\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\n//             <TextField\n//               label=\"Loan Amount\"\n//               variant=\"outlined\"\n//               fullWidth\n//               value={loanAmount}\n//               onChange={(e) => setLoanAmount(e.target.value)}\n//             />\n//           </Grid>\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\n//             <TextField\n//               label=\"Interest Rate (%)\"\n//               variant=\"outlined\"\n//               fullWidth\n//               value={interestRate}\n//               onChange={(e) => setInterestRate(e.target.value)}\n//             />\n//           </Grid>\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\n//             <TextField\n//               label=\"Loan Tenure (years)\"\n//               variant=\"outlined\"\n//               fullWidth\n//               value={loanTenure}\n//               onChange={(e) => setLoanTenure(e.target.value)}\n//             />\n//           </Grid>\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\n//             <TextField\n//               select\n//               label=\"Currency\"\n//               fullWidth\n//               value={selectedCurrency}\n//               onChange={handleCurrencyChange}\n//             >\n//               {Object.keys(exchangeRates).map((currency) => (\n//                 <MenuItem key={currency} value={currency}>\n//                   {currency}\n//                 </MenuItem>\n//               ))}\n//             </TextField>\n//           </Grid>\n//         </Grid>\n\n//         <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\n//           <Button variant=\"contained\" onClick={calculateEMI}>\n//             Calculate EMI\n//           </Button>\n//         </Box>\n\n//         {emi && (\n//           <Box sx={{ mt: 3, display: \"flex\", justifyContent: \"center\" }}>\n//             <Typography variant=\"h6\">\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\n//             </Typography>\n//             <Typography variant=\"h6\" sx={{ ml: 2 }}>\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\n//               {(emi * conversionRate).toFixed(2)}\n//             </Typography>\n//           </Box>\n//         )}\n\n//         {amortizationSchedule.length > 0 && (\n//           <Box sx={{ mt: 5 }}>\n//             <Typography variant=\"h5\" gutterBottom align=\"center\">\n//               Amortization Schedule ({selectedCurrency})\n//             </Typography>\n\n//             <Paper sx={{ padding: 2, overflowX: \"auto\" }}>\n//               <TableContainer sx={{ overflowX: \"auto\" }}>\n//                 <Table sx={{ minWidth: 650 }} aria-label=\"amortization table\">\n//                   <TableHead>\n//                     <TableRow>\n//                       <TableCell align=\"center\">Month</TableCell>\n//                       <TableCell align=\"center\">EMI</TableCell>\n//                       <TableCell align=\"center\">Principal</TableCell>\n//                       <TableCell align=\"center\">Interest</TableCell>\n//                       <TableCell align=\"center\">Balance</TableCell>\n//                     </TableRow>\n//                   </TableHead>\n//                   <TableBody>\n//                     {paginatedEntries.map((row) => (\n//                       <TableRow key={row.month}>\n//                         <TableCell align=\"center\">{row.month}</TableCell>\n//                         <TableCell align=\"center\">\n//                           {selectedCurrency}{\" \"}\n//                           {(row.emi * conversionRate).toFixed(2)}\n//                         </TableCell>\n//                         <TableCell align=\"center\">\n//                           {selectedCurrency}{\" \"}\n//                           {(row.principal * conversionRate).toFixed(2)}\n//                         </TableCell>\n//                         <TableCell align=\"center\">\n//                           {selectedCurrency}{\" \"}\n//                           {(row.interest * conversionRate).toFixed(2)}\n//                         </TableCell>\n//                         <TableCell align=\"center\">\n//                           {selectedCurrency}{\" \"}\n//                           {(row.balance * conversionRate).toFixed(2)}\n//                         </TableCell>\n//                       </TableRow>\n//                     ))}\n//                   </TableBody>\n//                 </Table>\n//               </TableContainer>\n//             </Paper>\n\n//             <Box\n//               sx={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-between\",\n//                 mt: 3,\n//                 flexWrap: \"wrap\",\n//                 gap: 2,\n//               }}\n//             >\n//               <Typography variant=\"h6\">\n//                 Total Entries: {amortizationSchedule.length}\n//               </Typography>\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n//                 <FormControl size=\"small\">\n//                   <InputLabel>Entries</InputLabel>\n//                   <Select\n//                     value={entriesPerPage}\n//                     label=\"Entries\"\n//                     onChange={handleChangeEntries}\n//                   >\n//                     {[10, 25, 50, 100].map((num) => (\n//                       <MenuItem key={num} value={num}>\n//                         {num}\n//                       </MenuItem>\n//                     ))}\n//                   </Select>\n//                 </FormControl>\n//                 <Pagination\n//                   count={totalPages}\n//                   page={page}\n//                   onChange={handlePageChange}\n//                   sx={{\n//                     backgroundColor:\n//                       theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#F5F5F5\", \n//                     borderRadius: 1,\n//                   }}\n//                 />\n//               </Box>\n//             </Box>\n//           </Box>\n//         )}\n//       </CardContent>\n//     </Card>\n//   );\n// }\n\n// export default HOME;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Button, MenuItem, Card, CardContent, Paper, FormControl, InputLabel, Select, Pagination, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HOME() {\n  _s();\n  const theme = useTheme();\n  const [loanAmount, setLoanAmount] = useState(\"\");\n  const [interestRate, setInterestRate] = useState(\"\");\n  const [loanTenure, setLoanTenure] = useState(\"\");\n  const [emi, setEmi] = useState(null);\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [errors, setErrors] = useState({\n    loanAmount: false,\n    interestRate: false,\n    loanTenure: false\n  });\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n  useEffect(() => {\n    axios.get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\").then(res => setExchangeRates(res.data.conversion_rates)).catch(err => console.error(\"Error fetching exchange rates:\", err));\n  }, []);\n  const validateInputs = () => {\n    const newErrors = {\n      loanAmount: !loanAmount || parseFloat(loanAmount) <= 0,\n      interestRate: !interestRate || parseFloat(interestRate) <= 0,\n      loanTenure: !loanTenure || parseFloat(loanTenure) <= 0\n    };\n    setErrors(newErrors);\n    return !Object.values(newErrors).some(val => val);\n  };\n  const calculateEMI = () => {\n    if (!validateInputs()) {\n      setEmi(null);\n      setAmortizationSchedule([]);\n      return;\n    }\n    const principal = parseFloat(loanAmount);\n    const rate = parseFloat(interestRate) / 12 / 100;\n    const tenure = parseFloat(loanTenure) * 12;\n    const emiAmount = principal * rate * Math.pow(1 + rate, tenure) / (Math.pow(1 + rate, tenure) - 1);\n    setEmi(emiAmount.toFixed(2));\n    let balance = principal;\n    let schedule = [];\n    for (let i = 1; i <= tenure; i++) {\n      let interestPayment = balance * rate;\n      let principalPayment = emiAmount - interestPayment;\n      balance -= principalPayment;\n      schedule.push({\n        month: i,\n        emi: emiAmount,\n        principal: principalPayment,\n        interest: interestPayment,\n        balance: balance < 0 ? 0 : balance\n      });\n    }\n    setAmortizationSchedule(schedule);\n    setPage(1);\n  };\n  const handleCurrencyChange = e => {\n    setSelectedCurrency(e.target.value);\n  };\n  const handleChangeEntries = e => {\n    setEntriesPerPage(parseInt(e.target.value));\n    setPage(1);\n  };\n  const handlePageChange = (_, value) => {\n    setPage(value);\n  };\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\n  const paginatedEntries = amortizationSchedule.slice((page - 1) * entriesPerPage, page * entriesPerPage);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: \"40px auto\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Loan EMI Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Loan Amount\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: loanAmount,\n            onChange: e => setLoanAmount(e.target.value),\n            error: errors.loanAmount,\n            helperText: errors.loanAmount ? \"Enter a valid amount > 0\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Interest Rate (%)\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: interestRate,\n            onChange: e => setInterestRate(e.target.value),\n            error: errors.interestRate,\n            helperText: errors.interestRate ? \"Enter a valid rate > 0\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Loan Tenure (years)\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: loanTenure,\n            onChange: e => setLoanTenure(e.target.value),\n            error: errors.loanTenure,\n            helperText: errors.loanTenure ? \"Enter a valid tenure > 0\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: \"Currency\",\n            fullWidth: true,\n            value: selectedCurrency,\n            onChange: handleCurrencyChange,\n            children: Object.keys(exchangeRates).map(currency => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: currency,\n              children: currency\n            }, currency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: calculateEMI,\n          children: \"Calculate EMI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), emi && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"EMI in INR: \\u20B9\", parseFloat(emi).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"EMI in \", selectedCurrency, \": \", selectedCurrency, \" \", (emi * conversionRate).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), amortizationSchedule.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          align: \"center\",\n          children: [\"Amortization Schedule (\", selectedCurrency, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            padding: 2,\n            overflowX: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 600\n              },\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"EMI\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Principal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Interest\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Balance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: paginatedEntries.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: row.month\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [selectedCurrency, \" \", (row.emi * conversionRate).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [selectedCurrency, \" \", (row.principal * conversionRate).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [selectedCurrency, \" \", (row.interest * conversionRate).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [selectedCurrency, \" \", (row.balance * conversionRate).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 25\n                  }, this)]\n                }, row.month, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            mt: 3,\n            flexWrap: \"wrap\",\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Entries: \", amortizationSchedule.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Entries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: entriesPerPage,\n                label: \"Entries\",\n                onChange: handleChangeEntries,\n                children: [10, 25, 50, 100].map(num => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              count: totalPages,\n              page: page,\n              onChange: handlePageChange,\n              sx: {\n                backgroundColor: theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#F5F5F5\",\n                borderRadius: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n}\n_s(HOME, \"ydc/qN8m6Vh8vm6Wc4hx4rkT+zY=\", false, function () {\n  return [useTheme];\n});\n_c = HOME;\nexport default HOME;\nvar _c;\n$RefreshReg$(_c, \"HOME\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","MenuItem","Card","CardContent","Paper","FormControl","InputLabel","Select","Pagination","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","axios","useTheme","jsxDEV","_jsxDEV","HOME","_s","theme","loanAmount","setLoanAmount","interestRate","setInterestRate","loanTenure","setLoanTenure","emi","setEmi","amortizationSchedule","setAmortizationSchedule","exchangeRates","setExchangeRates","selectedCurrency","setSelectedCurrency","entriesPerPage","setEntriesPerPage","page","setPage","errors","setErrors","totalPages","Math","ceil","length","get","then","res","data","conversion_rates","catch","err","console","error","validateInputs","newErrors","parseFloat","Object","values","some","val","calculateEMI","principal","rate","tenure","emiAmount","pow","toFixed","balance","schedule","i","interestPayment","principalPayment","push","month","interest","handleCurrencyChange","e","target","value","handleChangeEntries","parseInt","handlePageChange","_","conversionRate","paginatedEntries","slice","sx","margin","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","item","xs","sm","md","lg","label","fullWidth","onChange","helperText","select","keys","map","currency","display","mt","onClick","flexWrap","gap","overflowX","minWidth","size","row","alignItems","num","count","backgroundColor","palette","mode","borderRadius","_c","$RefreshReg$"],"sources":["P:/New folder/model/src/COMPONENTS/HOME.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Typography,\r\n//   TextField,\r\n//   Button,\r\n//   MenuItem,\r\n//   Card,\r\n//   CardContent,\r\n//   Paper,\r\n//   FormControl,\r\n//   InputLabel,\r\n//   Select,\r\n//   Pagination,\r\n//   Grid,\r\n//   Table,\r\n//   TableBody,\r\n//   TableCell,\r\n//   TableContainer,\r\n//   TableHead,\r\n//   TableRow,\r\n// } from \"@mui/material\";\r\n// import axios from \"axios\";\r\n// import { useTheme } from \"@mui/material/styles\"; \r\n\r\n// function HOME() {\r\n//   const theme = useTheme();\r\n\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n//   const [exchangeRates, setExchangeRates] = useState({});\r\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n//   const [page, setPage] = useState(1);\r\n\r\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\r\n//         \"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\"\r\n//       )\r\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\r\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n//   }, []);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount,\r\n//         principal: principalPayment,\r\n//         interest: interestPayment,\r\n//         balance: balance,\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handleCurrencyChange = (e) => {\r\n//     setSelectedCurrency(e.target.value);\r\n//   };\r\n\r\n//   const handleChangeEntries = (e) => {\r\n//     setEntriesPerPage(parseInt(e.target.value));\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handlePageChange = (_, value) => {\r\n//     setPage(value);\r\n//   };\r\n\r\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n//   const paginatedEntries = amortizationSchedule.slice(\r\n//     (page - 1) * entriesPerPage,\r\n//     page * entriesPerPage\r\n//   );\r\n\r\n//   return (\r\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n//       <CardContent>\r\n//         <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n//           Loan EMI Calculator\r\n//         </Typography>\r\n\r\n//         <Grid container spacing={2} justifyContent=\"center\">\r\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\r\n//             <TextField\r\n//               label=\"Loan Amount\"\r\n//               variant=\"outlined\"\r\n//               fullWidth\r\n//               value={loanAmount}\r\n//               onChange={(e) => setLoanAmount(e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\r\n//             <TextField\r\n//               label=\"Interest Rate (%)\"\r\n//               variant=\"outlined\"\r\n//               fullWidth\r\n//               value={interestRate}\r\n//               onChange={(e) => setInterestRate(e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\r\n//             <TextField\r\n//               label=\"Loan Tenure (years)\"\r\n//               variant=\"outlined\"\r\n//               fullWidth\r\n//               value={loanTenure}\r\n//               onChange={(e) => setLoanTenure(e.target.value)}\r\n//             />\r\n//           </Grid>\r\n//           <Grid item xs={12} sm={6} md={4} lg={3}>\r\n//             <TextField\r\n//               select\r\n//               label=\"Currency\"\r\n//               fullWidth\r\n//               value={selectedCurrency}\r\n//               onChange={handleCurrencyChange}\r\n//             >\r\n//               {Object.keys(exchangeRates).map((currency) => (\r\n//                 <MenuItem key={currency} value={currency}>\r\n//                   {currency}\r\n//                 </MenuItem>\r\n//               ))}\r\n//             </TextField>\r\n//           </Grid>\r\n//         </Grid>\r\n\r\n//         <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\r\n//           <Button variant=\"contained\" onClick={calculateEMI}>\r\n//             Calculate EMI\r\n//           </Button>\r\n//         </Box>\r\n\r\n//         {emi && (\r\n//           <Box sx={{ mt: 3, display: \"flex\", justifyContent: \"center\" }}>\r\n//             <Typography variant=\"h6\">\r\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\" sx={{ ml: 2 }}>\r\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n//               {(emi * conversionRate).toFixed(2)}\r\n//             </Typography>\r\n//           </Box>\r\n//         )}\r\n\r\n//         {amortizationSchedule.length > 0 && (\r\n//           <Box sx={{ mt: 5 }}>\r\n//             <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n//               Amortization Schedule ({selectedCurrency})\r\n//             </Typography>\r\n\r\n//             <Paper sx={{ padding: 2, overflowX: \"auto\" }}>\r\n//               <TableContainer sx={{ overflowX: \"auto\" }}>\r\n//                 <Table sx={{ minWidth: 650 }} aria-label=\"amortization table\">\r\n//                   <TableHead>\r\n//                     <TableRow>\r\n//                       <TableCell align=\"center\">Month</TableCell>\r\n//                       <TableCell align=\"center\">EMI</TableCell>\r\n//                       <TableCell align=\"center\">Principal</TableCell>\r\n//                       <TableCell align=\"center\">Interest</TableCell>\r\n//                       <TableCell align=\"center\">Balance</TableCell>\r\n//                     </TableRow>\r\n//                   </TableHead>\r\n//                   <TableBody>\r\n//                     {paginatedEntries.map((row) => (\r\n//                       <TableRow key={row.month}>\r\n//                         <TableCell align=\"center\">{row.month}</TableCell>\r\n//                         <TableCell align=\"center\">\r\n//                           {selectedCurrency}{\" \"}\r\n//                           {(row.emi * conversionRate).toFixed(2)}\r\n//                         </TableCell>\r\n//                         <TableCell align=\"center\">\r\n//                           {selectedCurrency}{\" \"}\r\n//                           {(row.principal * conversionRate).toFixed(2)}\r\n//                         </TableCell>\r\n//                         <TableCell align=\"center\">\r\n//                           {selectedCurrency}{\" \"}\r\n//                           {(row.interest * conversionRate).toFixed(2)}\r\n//                         </TableCell>\r\n//                         <TableCell align=\"center\">\r\n//                           {selectedCurrency}{\" \"}\r\n//                           {(row.balance * conversionRate).toFixed(2)}\r\n//                         </TableCell>\r\n//                       </TableRow>\r\n//                     ))}\r\n//                   </TableBody>\r\n//                 </Table>\r\n//               </TableContainer>\r\n//             </Paper>\r\n\r\n//             <Box\r\n//               sx={{\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"space-between\",\r\n//                 mt: 3,\r\n//                 flexWrap: \"wrap\",\r\n//                 gap: 2,\r\n//               }}\r\n//             >\r\n//               <Typography variant=\"h6\">\r\n//                 Total Entries: {amortizationSchedule.length}\r\n//               </Typography>\r\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n//                 <FormControl size=\"small\">\r\n//                   <InputLabel>Entries</InputLabel>\r\n//                   <Select\r\n//                     value={entriesPerPage}\r\n//                     label=\"Entries\"\r\n//                     onChange={handleChangeEntries}\r\n//                   >\r\n//                     {[10, 25, 50, 100].map((num) => (\r\n//                       <MenuItem key={num} value={num}>\r\n//                         {num}\r\n//                       </MenuItem>\r\n//                     ))}\r\n//                   </Select>\r\n//                 </FormControl>\r\n//                 <Pagination\r\n//                   count={totalPages}\r\n//                   page={page}\r\n//                   onChange={handlePageChange}\r\n//                   sx={{\r\n//                     backgroundColor:\r\n//                       theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#F5F5F5\", \r\n//                     borderRadius: 1,\r\n//                   }}\r\n//                 />\r\n//               </Box>\r\n//             </Box>\r\n//           </Box>\r\n//         )}\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Pagination,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nfunction HOME() {\r\n  const theme = useTheme();\r\n\r\n  const [loanAmount, setLoanAmount] = useState(\"\");\r\n  const [interestRate, setInterestRate] = useState(\"\");\r\n  const [loanTenure, setLoanTenure] = useState(\"\");\r\n  const [emi, setEmi] = useState(null);\r\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n  const [exchangeRates, setExchangeRates] = useState({});\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [errors, setErrors] = useState({\r\n    loanAmount: false,\r\n    interestRate: false,\r\n    loanTenure: false,\r\n  });\r\n\r\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\r\n      .then((res) => setExchangeRates(res.data.conversion_rates))\r\n      .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n  }, []);\r\n\r\n  const validateInputs = () => {\r\n    const newErrors = {\r\n      loanAmount: !loanAmount || parseFloat(loanAmount) <= 0,\r\n      interestRate: !interestRate || parseFloat(interestRate) <= 0,\r\n      loanTenure: !loanTenure || parseFloat(loanTenure) <= 0,\r\n    };\r\n    setErrors(newErrors);\r\n    return !Object.values(newErrors).some((val) => val);\r\n  };\r\n\r\n  const calculateEMI = () => {\r\n    if (!validateInputs()) {\r\n      setEmi(null);\r\n      setAmortizationSchedule([]);\r\n      return;\r\n    }\r\n\r\n    const principal = parseFloat(loanAmount);\r\n    const rate = parseFloat(interestRate) / 12 / 100;\r\n    const tenure = parseFloat(loanTenure) * 12;\r\n    const emiAmount =\r\n      (principal * rate * Math.pow(1 + rate, tenure)) /\r\n      (Math.pow(1 + rate, tenure) - 1);\r\n\r\n    setEmi(emiAmount.toFixed(2));\r\n\r\n    let balance = principal;\r\n    let schedule = [];\r\n    for (let i = 1; i <= tenure; i++) {\r\n      let interestPayment = balance * rate;\r\n      let principalPayment = emiAmount - interestPayment;\r\n      balance -= principalPayment;\r\n\r\n      schedule.push({\r\n        month: i,\r\n        emi: emiAmount,\r\n        principal: principalPayment,\r\n        interest: interestPayment,\r\n        balance: balance < 0 ? 0 : balance,\r\n      });\r\n    }\r\n    setAmortizationSchedule(schedule);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleCurrencyChange = (e) => {\r\n    setSelectedCurrency(e.target.value);\r\n  };\r\n\r\n  const handleChangeEntries = (e) => {\r\n    setEntriesPerPage(parseInt(e.target.value));\r\n    setPage(1);\r\n  };\r\n\r\n  const handlePageChange = (_, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n  const paginatedEntries = amortizationSchedule.slice(\r\n    (page - 1) * entriesPerPage,\r\n    page * entriesPerPage\r\n  );\r\n\r\n  return (\r\n    <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n          Loan EMI Calculator\r\n        </Typography>\r\n\r\n        <Grid container spacing={2} justifyContent=\"center\">\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              label=\"Loan Amount\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={loanAmount}\r\n              onChange={(e) => setLoanAmount(e.target.value)}\r\n              error={errors.loanAmount}\r\n              helperText={errors.loanAmount ? \"Enter a valid amount > 0\" : \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              label=\"Interest Rate (%)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={interestRate}\r\n              onChange={(e) => setInterestRate(e.target.value)}\r\n              error={errors.interestRate}\r\n              helperText={errors.interestRate ? \"Enter a valid rate > 0\" : \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              label=\"Loan Tenure (years)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={loanTenure}\r\n              onChange={(e) => setLoanTenure(e.target.value)}\r\n              error={errors.loanTenure}\r\n              helperText={errors.loanTenure ? \"Enter a valid tenure > 0\" : \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              select\r\n              label=\"Currency\"\r\n              fullWidth\r\n              value={selectedCurrency}\r\n              onChange={handleCurrencyChange}\r\n            >\r\n              {Object.keys(exchangeRates).map((currency) => (\r\n                <MenuItem key={currency} value={currency}>\r\n                  {currency}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\r\n          <Button variant=\"contained\" onClick={calculateEMI}>\r\n            Calculate EMI\r\n          </Button>\r\n        </Box>\r\n\r\n        {emi && (\r\n          <Box sx={{ mt: 3, display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", gap: 2 }}>\r\n            <Typography variant=\"h6\">\r\n              EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n              {(emi * conversionRate).toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {amortizationSchedule.length > 0 && (\r\n          <Box sx={{ mt: 5 }}>\r\n            <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n              Amortization Schedule ({selectedCurrency})\r\n            </Typography>\r\n\r\n            <Paper sx={{ padding: 2, overflowX: \"auto\" }}>\r\n              <TableContainer>\r\n                <Table sx={{ minWidth: 600 }} size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Month</TableCell>\r\n                      <TableCell align=\"center\">EMI</TableCell>\r\n                      <TableCell align=\"center\">Principal</TableCell>\r\n                      <TableCell align=\"center\">Interest</TableCell>\r\n                      <TableCell align=\"center\">Balance</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {paginatedEntries.map((row) => (\r\n                      <TableRow key={row.month}>\r\n                        <TableCell align=\"center\">{row.month}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {selectedCurrency} {(row.emi * conversionRate).toFixed(2)}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {selectedCurrency} {(row.principal * conversionRate).toFixed(2)}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {selectedCurrency} {(row.interest * conversionRate).toFixed(2)}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {selectedCurrency} {(row.balance * conversionRate).toFixed(2)}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Paper>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                mt: 3,\r\n                flexWrap: \"wrap\",\r\n                gap: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\">\r\n                Total Entries: {amortizationSchedule.length}\r\n              </Typography>\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n                <FormControl size=\"small\">\r\n                  <InputLabel>Entries</InputLabel>\r\n                  <Select\r\n                    value={entriesPerPage}\r\n                    label=\"Entries\"\r\n                    onChange={handleChangeEntries}\r\n                  >\r\n                    {[10, 25, 50, 100].map((num) => (\r\n                      <MenuItem key={num} value={num}>\r\n                        {num}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <Pagination\r\n                  count={totalPages}\r\n                  page={page}\r\n                  onChange={handlePageChange}\r\n                  sx={{\r\n                    backgroundColor: theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#F5F5F5\",\r\n                    borderRadius: 1,\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HOME;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}