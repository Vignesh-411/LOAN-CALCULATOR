{"ast":null,"code":"var _jsxFileName = \"P:\\\\New folder\\\\model\\\\src\\\\COMPONENTS\\\\HOME.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   Box,\n//   Typography,\n//   TextField,\n//   Button,\n//   MenuItem,\n//   Card,\n//   CardContent,\n//   Paper,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   Pagination,\n// } from \"@mui/material\";\n// import axios from \"axios\";\n\n// function HOME() {\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n//   const [exchangeRates, setExchangeRates] = useState({});\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\n//   const [page, setPage] = useState(1);\n\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\n//   }, []);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount,\n//         principal: principalPayment,\n//         interest: interestPayment,\n//         balance: balance,\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//     setPage(1);\n//   };\n\n//   const handleReset = () => {\n//     setLoanAmount(\"\");\n//     setInterestRate(\"\");\n//     setLoanTenure(\"\");\n//     setEmi(null);\n//     setAmortizationSchedule([]);\n//   };\n\n//   const handleCurrencyChange = (e) => {\n//     setSelectedCurrency(e.target.value);\n//   };\n\n//   const handleChangeEntries = (e) => {\n//     setEntriesPerPage(parseInt(e.target.value));\n//     setPage(1);\n//   };\n\n//   const handlePageChange = (_, value) => {\n//     setPage(value);\n//   };\n\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\n\n//   const paginatedEntries = amortizationSchedule.slice(\n//     (page - 1) * entriesPerPage,\n//     page * entriesPerPage\n//   );\n\n//   return (\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\n//       <CardContent>\n//         <Typography variant=\"h4\" gutterBottom>\n//           Loan EMI Calculator\n//         </Typography>\n\n//         <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\n//           <TextField\n//             label=\"Loan Amount\"\n//             variant=\"outlined\"\n//             value={loanAmount}\n//             onChange={(e) => setLoanAmount(e.target.value)}\n//           />\n//           <TextField\n//             label=\"Interest Rate (%)\"\n//             variant=\"outlined\"\n//             value={interestRate}\n//             onChange={(e) => setInterestRate(e.target.value)}\n//           />\n//           <TextField\n//             label=\"Loan Tenure (years)\"\n//             variant=\"outlined\"\n//             value={loanTenure}\n//             onChange={(e) => setLoanTenure(e.target.value)}\n//           />\n//           <TextField\n//             select\n//             label=\"Currency\"\n//             value={selectedCurrency}\n//             onChange={handleCurrencyChange}\n//           >\n//             {Object.keys(exchangeRates).map((currency) => (\n//               <MenuItem key={currency} value={currency}>\n//                 {currency}\n//               </MenuItem>\n//             ))}\n//           </TextField>\n//         </Box>\n\n//         <Button variant=\"contained\" onClick={calculateEMI}>\n//           Calculate EMI\n//         </Button>\n\n//         {emi && (\n//           <Box sx={{ mt: 3 }}>\n//             <Typography variant=\"h6\">\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\n//               {(emi * conversionRate).toFixed(2)}\n//             </Typography>\n//           </Box>\n//         )}\n\n//         {amortizationSchedule.length > 0 && (\n//           <Box sx={{ mt: 5 }}>\n//             <Box\n//               sx={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-between\",\n//                 alignItems: \"center\",\n//                 mb: 2,\n//                 flexWrap: \"wrap\",\n//               }}\n//             >\n//               <Typography variant=\"h5\">\n//                 Amortization Schedule ({selectedCurrency})\n//               </Typography>\n//               <Button variant=\"outlined\" color=\"error\" onClick={handleReset}>\n//                 Reset Table\n//               </Button>\n//             </Box>\n\n//             <Paper sx={{ overflowX: \"auto\" }}>\n//               <Box\n//                 sx={{\n//                   display: \"flex\",\n//                   minWidth: \"600px\",\n//                   fontWeight: \"bold\",\n//                   borderBottom: \"2px solid #000\",\n//                   paddingY: 1,\n//                   paddingX: 2,\n//                 }}\n//               >\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Month</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>EMI ({selectedCurrency})</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Principal ({selectedCurrency})</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Interest ({selectedCurrency})</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Balance ({selectedCurrency})</Typography>\n//                 </Box>\n//               </Box>\n\n//               {/* Scrollable table body */}\n//               <Box\n//                 sx={{\n//                   maxHeight: 400,\n//                   overflowY: \"auto\",\n//                   paddingX: 2,\n//                 }}\n//               >\n//                 {paginatedEntries.map((row) => (\n//                   <Box\n//                     key={row.month}\n//                     sx={{\n//                       display: \"flex\",\n//                       justifyContent: \"space-between\",\n//                       paddingY: 1,\n//                       borderBottom: \"1px solid #ddd\",\n//                       minWidth: \"600px\",\n//                     }}\n//                   >\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{row.month}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.emi * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.principal * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.interest * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.balance * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                   </Box>\n//                 ))}\n//               </Box>\n//             </Paper>\n\n//             <Box\n//               sx={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-between\",\n//                 mt: 3,\n//                 flexWrap: \"wrap\",\n//                 gap: 2,\n//               }}\n//             >\n//               <Typography variant=\"h6\">\n//                 Total Entries: {amortizationSchedule.length}\n//               </Typography>\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n//                 <FormControl size=\"small\">\n//                   <InputLabel>Entries</InputLabel>\n//                   <Select\n//                     value={entriesPerPage}\n//                     label=\"Entries\"\n//                     onChange={handleChangeEntries}\n//                   >\n//                     {[10, 25, 50, 100].map((num) => (\n//                       <MenuItem key={num} value={num}>\n//                         {num}\n//                       </MenuItem>\n//                     ))}\n//                   </Select>\n//                 </FormControl>\n//                 <Pagination\n//                   count={totalPages}\n//                   page={page}\n//                   onChange={handlePageChange}\n//                   sx={{ backgroundColor: \"#1E1E1E\", borderRadius: 1 }}\n//                 />\n//               </Box>\n//             </Box>\n//           </Box>\n//         )}\n//       </CardContent>\n//     </Card>\n//   );\n// }\n\n// export default HOME;\n\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   Box,\n//   Typography,\n//   TextField,\n//   Button,\n//   MenuItem,\n//   Card,\n//   CardContent,\n//   Paper,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   Pagination,\n// } from \"@mui/material\";\n// import axios from \"axios\";\n// import { useTheme } from \"@mui/material/styles\"; // Import theme hook\n\n// function HOME() {\n//   const theme = useTheme(); // Use theme hook to get current theme\n\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n//   const [exchangeRates, setExchangeRates] = useState({});\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\n//   const [page, setPage] = useState(1);\n\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n\n//   useEffect(() => {\n//     axios\n//       .get(\n//         \"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\"\n//       )\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\n//   }, []);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount,\n//         principal: principalPayment,\n//         interest: interestPayment,\n//         balance: balance,\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//     setPage(1);\n//   };\n\n//   const handleCurrencyChange = (e) => {\n//     setSelectedCurrency(e.target.value);\n//   };\n\n//   const handleChangeEntries = (e) => {\n//     setEntriesPerPage(parseInt(e.target.value));\n//     setPage(1);\n//   };\n\n//   const handlePageChange = (_, value) => {\n//     setPage(value);\n//   };\n\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\n\n//   const paginatedEntries = amortizationSchedule.slice(\n//     (page - 1) * entriesPerPage,\n//     page * entriesPerPage\n//   );\n\n//   return (\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\n//       <CardContent>\n//         <Typography variant=\"h4\" gutterBottom>\n//           Loan EMI Calculator\n//         </Typography>\n\n//         <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\n//           <TextField\n//             label=\"Loan Amount\"\n//             variant=\"outlined\"\n//             value={loanAmount}\n//             onChange={(e) => setLoanAmount(e.target.value)}\n//           />\n//           <TextField\n//             label=\"Interest Rate (%)\"\n//             variant=\"outlined\"\n//             value={interestRate}\n//             onChange={(e) => setInterestRate(e.target.value)}\n//           />\n//           <TextField\n//             label=\"Loan Tenure (years)\"\n//             variant=\"outlined\"\n//             value={loanTenure}\n//             onChange={(e) => setLoanTenure(e.target.value)}\n//           />\n//           <TextField\n//             select\n//             label=\"Currency\"\n//             value={selectedCurrency}\n//             onChange={handleCurrencyChange}\n//           >\n//             {Object.keys(exchangeRates).map((currency) => (\n//               <MenuItem key={currency} value={currency}>\n//                 {currency}\n//               </MenuItem>\n//             ))}\n//           </TextField>\n//         </Box>\n\n//         <Button variant=\"contained\" onClick={calculateEMI}>\n//           Calculate EMI\n//         </Button>\n\n//         {emi && (\n//           <Box sx={{ mt: 3 }}>\n//             <Typography variant=\"h6\">\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\n//               {(emi * conversionRate).toFixed(2)}\n//             </Typography>\n//           </Box>\n//         )}\n\n//         {amortizationSchedule.length > 0 && (\n//           <Box sx={{ mt: 5 }}>\n//             <Typography variant=\"h5\" gutterBottom>\n//               Amortization Schedule ({selectedCurrency})\n//             </Typography>\n\n//             <Paper sx={{ padding: 2, overflowX: \"auto\" }}>\n//               <Box\n//                 sx={{\n//                   display: \"flex\",\n//                   minWidth: \"600px\", // ensures horizontal scroll\n//                   fontWeight: \"bold\",\n//                   borderBottom: \"2px solid #000\",\n//                   paddingY: 1,\n//                 }}\n//               >\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Month</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>EMI</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Principal</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Interest</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Balance</Typography>\n//                 </Box>\n//               </Box>\n\n//               {/* Scrollable data rows */}\n//               <Box sx={{ overflowX: \"auto\", maxHeight: 400 }}>\n//                 {paginatedEntries.map((row) => (\n//                   <Box\n//                     key={row.month}\n//                     sx={{\n//                       display: \"flex\",\n//                       justifyContent: \"space-between\",\n//                       paddingY: 1,\n//                       borderBottom: \"1px solid #ddd\",\n//                     }}\n//                   >\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{row.month}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>\n//                         {selectedCurrency}{\" \"}\n//                         {(row.emi * conversionRate).toFixed(2)}\n//                       </Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>\n//                         {selectedCurrency}{\" \"}\n//                         {(row.principal * conversionRate).toFixed(2)}\n//                       </Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>\n//                         {selectedCurrency}{\" \"}\n//                         {(row.interest * conversionRate).toFixed(2)}\n//                       </Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>\n//                         {selectedCurrency}{\" \"}\n//                         {(row.balance * conversionRate).toFixed(2)}\n//                       </Typography>\n//                     </Box>\n//                   </Box>\n//                 ))}\n//               </Box>\n//             </Paper>\n\n//             <Box\n//               sx={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-between\",\n//                 mt: 3,\n//                 flexWrap: \"wrap\",\n//                 gap: 2,\n//               }}\n//             >\n//               <Typography variant=\"h6\">\n//                 Total Entries: {amortizationSchedule.length}\n//               </Typography>\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n//                 <FormControl size=\"small\">\n//                   <InputLabel>Entries</InputLabel>\n//                   <Select\n//                     value={entriesPerPage}\n//                     label=\"Entries\"\n//                     onChange={handleChangeEntries}\n//                   >\n//                     {[10, 25, 50, 100].map((num) => (\n//                       <MenuItem key={num} value={num}>\n//                         {num}\n//                       </MenuItem>\n//                     ))}\n//                   </Select>\n//                 </FormControl>\n//                 <Pagination\n//                   count={totalPages}\n//                   page={page}\n//                   onChange={handlePageChange}\n//                   sx={{\n//                     backgroundColor:\n//                       theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#ffffff\", \n//                     borderRadius: 1,\n//                   }}\n//                 />\n//               </Box>\n//             </Box>\n//           </Box>\n//         )}\n//       </CardContent>\n//     </Card>\n//   );\n// }\n\n// export default HOME;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Button, MenuItem, Card, CardContent, Paper, FormControl, InputLabel, Select, Pagination, Grid } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useTheme } from \"@mui/material/styles\"; // Import theme hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HOME() {\n  _s();\n  const theme = useTheme(); // Use theme hook to get current theme\n\n  const [loanAmount, setLoanAmount] = useState(\"\");\n  const [interestRate, setInterestRate] = useState(\"\");\n  const [loanTenure, setLoanTenure] = useState(\"\");\n  const [emi, setEmi] = useState(null);\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n  useEffect(() => {\n    axios.get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\").then(res => setExchangeRates(res.data.conversion_rates)).catch(err => console.error(\"Error fetching exchange rates:\", err));\n  }, []);\n  const calculateEMI = () => {\n    const principal = parseFloat(loanAmount);\n    const rate = parseFloat(interestRate) / 12 / 100;\n    const tenure = parseFloat(loanTenure) * 12;\n    const emiAmount = principal * rate * Math.pow(1 + rate, tenure) / (Math.pow(1 + rate, tenure) - 1);\n    setEmi(emiAmount.toFixed(2));\n    let balance = principal;\n    let schedule = [];\n    for (let i = 1; i <= tenure; i++) {\n      let interestPayment = balance * rate;\n      let principalPayment = emiAmount - interestPayment;\n      balance -= principalPayment;\n      schedule.push({\n        month: i,\n        emi: emiAmount,\n        principal: principalPayment,\n        interest: interestPayment,\n        balance: balance\n      });\n    }\n    setAmortizationSchedule(schedule);\n    setPage(1);\n  };\n  const handleCurrencyChange = e => {\n    setSelectedCurrency(e.target.value);\n  };\n  const handleChangeEntries = e => {\n    setEntriesPerPage(parseInt(e.target.value));\n    setPage(1);\n  };\n  const handlePageChange = (_, value) => {\n    setPage(value);\n  };\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\n  const paginatedEntries = amortizationSchedule.slice((page - 1) * entriesPerPage, page * entriesPerPage);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: \"40px auto\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Loan EMI Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Loan Amount\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: loanAmount,\n            onChange: e => setLoanAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Interest Rate (%)\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: interestRate,\n            onChange: e => setInterestRate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Loan Tenure (years)\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: loanTenure,\n            onChange: e => setLoanTenure(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: \"Currency\",\n            fullWidth: true,\n            value: selectedCurrency,\n            onChange: handleCurrencyChange,\n            children: Object.keys(exchangeRates).map(currency => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: currency,\n              children: currency\n            }, currency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: calculateEMI,\n          children: \"Calculate EMI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this), emi && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Estimated EMI in INR: \\u20B9\", parseFloat(emi).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            ml: 2\n          },\n          children: [\"Estimated EMI in \", selectedCurrency, \": \", selectedCurrency, \" \", (emi * conversionRate).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }, this), amortizationSchedule.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          align: \"center\",\n          children: [\"Amortization Schedule (\", selectedCurrency, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            padding: 2,\n            overflowX: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              minWidth: \"600px\",\n              // ensures horizontal scroll\n              fontWeight: \"bold\",\n              borderBottom: \"2px solid #000\",\n              paddingY: 1,\n              flexWrap: \"wrap\" // Allows wrap on small screens\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\",\n                minWidth: \"120px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\",\n                minWidth: \"120px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"EMI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\",\n                minWidth: \"120px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Principal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\",\n                minWidth: \"120px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Interest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\",\n                minWidth: \"120px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              overflowX: \"auto\",\n              maxHeight: 400\n            },\n            children: paginatedEntries.map(row => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                paddingY: 1,\n                borderBottom: \"1px solid #ddd\",\n                flexWrap: \"wrap\" // Allows wrap on small screens\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\",\n                  minWidth: \"120px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: row.month\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\",\n                  minWidth: \"120px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.emi * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\",\n                  minWidth: \"120px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.principal * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\",\n                  minWidth: \"120px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.interest * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\",\n                  minWidth: \"120px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.balance * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 21\n              }, this)]\n            }, row.month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            mt: 3,\n            flexWrap: \"wrap\",\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Entries: \", amortizationSchedule.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Entries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: entriesPerPage,\n                label: \"Entries\",\n                onChange: handleChangeEntries,\n                children: [10, 25, 50, 100].map(num => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              count: totalPages,\n              page: page,\n              onChange: handlePageChange,\n              sx: {\n                backgroundColor: theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#F5F5F5\",\n                // Theme-based background\n                borderRadius: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 647,\n    columnNumber: 5\n  }, this);\n}\n_s(HOME, \"BggEZxgYqK/MnDAaigbqeFbfU1c=\", false, function () {\n  return [useTheme];\n});\n_c = HOME;\nexport default HOME;\nvar _c;\n$RefreshReg$(_c, \"HOME\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","MenuItem","Card","CardContent","Paper","FormControl","InputLabel","Select","Pagination","Grid","axios","useTheme","jsxDEV","_jsxDEV","HOME","_s","theme","loanAmount","setLoanAmount","interestRate","setInterestRate","loanTenure","setLoanTenure","emi","setEmi","amortizationSchedule","setAmortizationSchedule","exchangeRates","setExchangeRates","selectedCurrency","setSelectedCurrency","entriesPerPage","setEntriesPerPage","page","setPage","totalPages","Math","ceil","length","get","then","res","data","conversion_rates","catch","err","console","error","calculateEMI","principal","parseFloat","rate","tenure","emiAmount","pow","toFixed","balance","schedule","i","interestPayment","principalPayment","push","month","interest","handleCurrencyChange","e","target","value","handleChangeEntries","parseInt","handlePageChange","_","conversionRate","paginatedEntries","slice","sx","margin","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","item","xs","sm","md","lg","label","fullWidth","onChange","select","Object","keys","map","currency","display","mt","onClick","ml","overflowX","minWidth","fontWeight","borderBottom","paddingY","flexWrap","width","maxHeight","row","gap","alignItems","size","num","count","backgroundColor","palette","mode","borderRadius","_c","$RefreshReg$"],"sources":["P:/New folder/model/src/COMPONENTS/HOME.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Typography,\r\n//   TextField,\r\n//   Button,\r\n//   MenuItem,\r\n//   Card,\r\n//   CardContent,\r\n//   Paper,\r\n//   FormControl,\r\n//   InputLabel,\r\n//   Select,\r\n//   Pagination,\r\n// } from \"@mui/material\";\r\n// import axios from \"axios\";\r\n\r\n// function HOME() {\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n//   const [exchangeRates, setExchangeRates] = useState({});\r\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n//   const [page, setPage] = useState(1);\r\n\r\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\r\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\r\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n//   }, []);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount,\r\n//         principal: principalPayment,\r\n//         interest: interestPayment,\r\n//         balance: balance,\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handleReset = () => {\r\n//     setLoanAmount(\"\");\r\n//     setInterestRate(\"\");\r\n//     setLoanTenure(\"\");\r\n//     setEmi(null);\r\n//     setAmortizationSchedule([]);\r\n//   };\r\n\r\n//   const handleCurrencyChange = (e) => {\r\n//     setSelectedCurrency(e.target.value);\r\n//   };\r\n\r\n//   const handleChangeEntries = (e) => {\r\n//     setEntriesPerPage(parseInt(e.target.value));\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handlePageChange = (_, value) => {\r\n//     setPage(value);\r\n//   };\r\n\r\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n//   const paginatedEntries = amortizationSchedule.slice(\r\n//     (page - 1) * entriesPerPage,\r\n//     page * entriesPerPage\r\n//   );\r\n\r\n//   return (\r\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n//       <CardContent>\r\n//         <Typography variant=\"h4\" gutterBottom>\r\n//           Loan EMI Calculator\r\n//         </Typography>\r\n\r\n//         <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\r\n//           <TextField\r\n//             label=\"Loan Amount\"\r\n//             variant=\"outlined\"\r\n//             value={loanAmount}\r\n//             onChange={(e) => setLoanAmount(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             label=\"Interest Rate (%)\"\r\n//             variant=\"outlined\"\r\n//             value={interestRate}\r\n//             onChange={(e) => setInterestRate(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             label=\"Loan Tenure (years)\"\r\n//             variant=\"outlined\"\r\n//             value={loanTenure}\r\n//             onChange={(e) => setLoanTenure(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             select\r\n//             label=\"Currency\"\r\n//             value={selectedCurrency}\r\n//             onChange={handleCurrencyChange}\r\n//           >\r\n//             {Object.keys(exchangeRates).map((currency) => (\r\n//               <MenuItem key={currency} value={currency}>\r\n//                 {currency}\r\n//               </MenuItem>\r\n//             ))}\r\n//           </TextField>\r\n//         </Box>\r\n\r\n//         <Button variant=\"contained\" onClick={calculateEMI}>\r\n//           Calculate EMI\r\n//         </Button>\r\n\r\n//         {emi && (\r\n//           <Box sx={{ mt: 3 }}>\r\n//             <Typography variant=\"h6\">\r\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n//               {(emi * conversionRate).toFixed(2)}\r\n//             </Typography>\r\n//           </Box>\r\n//         )}\r\n\r\n//         {amortizationSchedule.length > 0 && (\r\n//           <Box sx={{ mt: 5 }}>\r\n//             <Box\r\n//               sx={{\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"space-between\",\r\n//                 alignItems: \"center\",\r\n//                 mb: 2,\r\n//                 flexWrap: \"wrap\",\r\n//               }}\r\n//             >\r\n//               <Typography variant=\"h5\">\r\n//                 Amortization Schedule ({selectedCurrency})\r\n//               </Typography>\r\n//               <Button variant=\"outlined\" color=\"error\" onClick={handleReset}>\r\n//                 Reset Table\r\n//               </Button>\r\n//             </Box>\r\n\r\n//             <Paper sx={{ overflowX: \"auto\" }}>\r\n//               <Box\r\n//                 sx={{\r\n//                   display: \"flex\",\r\n//                   minWidth: \"600px\",\r\n//                   fontWeight: \"bold\",\r\n//                   borderBottom: \"2px solid #000\",\r\n//                   paddingY: 1,\r\n//                   paddingX: 2,\r\n//                 }}\r\n//               >\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Month</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>EMI ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Principal ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Interest ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Balance ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//               </Box>\r\n\r\n//               {/* Scrollable table body */}\r\n//               <Box\r\n//                 sx={{\r\n//                   maxHeight: 400,\r\n//                   overflowY: \"auto\",\r\n//                   paddingX: 2,\r\n//                 }}\r\n//               >\r\n//                 {paginatedEntries.map((row) => (\r\n//                   <Box\r\n//                     key={row.month}\r\n//                     sx={{\r\n//                       display: \"flex\",\r\n//                       justifyContent: \"space-between\",\r\n//                       paddingY: 1,\r\n//                       borderBottom: \"1px solid #ddd\",\r\n//                       minWidth: \"600px\",\r\n//                     }}\r\n//                   >\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{row.month}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.emi * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.principal * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.interest * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.balance * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                   </Box>\r\n//                 ))}\r\n//               </Box>\r\n//             </Paper>\r\n\r\n//             <Box\r\n//               sx={{\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"space-between\",\r\n//                 mt: 3,\r\n//                 flexWrap: \"wrap\",\r\n//                 gap: 2,\r\n//               }}\r\n//             >\r\n//               <Typography variant=\"h6\">\r\n//                 Total Entries: {amortizationSchedule.length}\r\n//               </Typography>\r\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n//                 <FormControl size=\"small\">\r\n//                   <InputLabel>Entries</InputLabel>\r\n//                   <Select\r\n//                     value={entriesPerPage}\r\n//                     label=\"Entries\"\r\n//                     onChange={handleChangeEntries}\r\n//                   >\r\n//                     {[10, 25, 50, 100].map((num) => (\r\n//                       <MenuItem key={num} value={num}>\r\n//                         {num}\r\n//                       </MenuItem>\r\n//                     ))}\r\n//                   </Select>\r\n//                 </FormControl>\r\n//                 <Pagination\r\n//                   count={totalPages}\r\n//                   page={page}\r\n//                   onChange={handlePageChange}\r\n//                   sx={{ backgroundColor: \"#1E1E1E\", borderRadius: 1 }}\r\n//                 />\r\n//               </Box>\r\n//             </Box>\r\n//           </Box>\r\n//         )}\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Typography,\r\n//   TextField,\r\n//   Button,\r\n//   MenuItem,\r\n//   Card,\r\n//   CardContent,\r\n//   Paper,\r\n//   FormControl,\r\n//   InputLabel,\r\n//   Select,\r\n//   Pagination,\r\n// } from \"@mui/material\";\r\n// import axios from \"axios\";\r\n// import { useTheme } from \"@mui/material/styles\"; // Import theme hook\r\n\r\n// function HOME() {\r\n//   const theme = useTheme(); // Use theme hook to get current theme\r\n\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n//   const [exchangeRates, setExchangeRates] = useState({});\r\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n//   const [page, setPage] = useState(1);\r\n\r\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\r\n//         \"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\"\r\n//       )\r\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\r\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n//   }, []);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount,\r\n//         principal: principalPayment,\r\n//         interest: interestPayment,\r\n//         balance: balance,\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handleCurrencyChange = (e) => {\r\n//     setSelectedCurrency(e.target.value);\r\n//   };\r\n\r\n//   const handleChangeEntries = (e) => {\r\n//     setEntriesPerPage(parseInt(e.target.value));\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handlePageChange = (_, value) => {\r\n//     setPage(value);\r\n//   };\r\n\r\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n//   const paginatedEntries = amortizationSchedule.slice(\r\n//     (page - 1) * entriesPerPage,\r\n//     page * entriesPerPage\r\n//   );\r\n\r\n//   return (\r\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n//       <CardContent>\r\n//         <Typography variant=\"h4\" gutterBottom>\r\n//           Loan EMI Calculator\r\n//         </Typography>\r\n\r\n//         <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\r\n//           <TextField\r\n//             label=\"Loan Amount\"\r\n//             variant=\"outlined\"\r\n//             value={loanAmount}\r\n//             onChange={(e) => setLoanAmount(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             label=\"Interest Rate (%)\"\r\n//             variant=\"outlined\"\r\n//             value={interestRate}\r\n//             onChange={(e) => setInterestRate(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             label=\"Loan Tenure (years)\"\r\n//             variant=\"outlined\"\r\n//             value={loanTenure}\r\n//             onChange={(e) => setLoanTenure(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             select\r\n//             label=\"Currency\"\r\n//             value={selectedCurrency}\r\n//             onChange={handleCurrencyChange}\r\n//           >\r\n//             {Object.keys(exchangeRates).map((currency) => (\r\n//               <MenuItem key={currency} value={currency}>\r\n//                 {currency}\r\n//               </MenuItem>\r\n//             ))}\r\n//           </TextField>\r\n//         </Box>\r\n\r\n//         <Button variant=\"contained\" onClick={calculateEMI}>\r\n//           Calculate EMI\r\n//         </Button>\r\n\r\n//         {emi && (\r\n//           <Box sx={{ mt: 3 }}>\r\n//             <Typography variant=\"h6\">\r\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n//               {(emi * conversionRate).toFixed(2)}\r\n//             </Typography>\r\n//           </Box>\r\n//         )}\r\n\r\n//         {amortizationSchedule.length > 0 && (\r\n//           <Box sx={{ mt: 5 }}>\r\n//             <Typography variant=\"h5\" gutterBottom>\r\n//               Amortization Schedule ({selectedCurrency})\r\n//             </Typography>\r\n\r\n//             <Paper sx={{ padding: 2, overflowX: \"auto\" }}>\r\n//               <Box\r\n//                 sx={{\r\n//                   display: \"flex\",\r\n//                   minWidth: \"600px\", // ensures horizontal scroll\r\n//                   fontWeight: \"bold\",\r\n//                   borderBottom: \"2px solid #000\",\r\n//                   paddingY: 1,\r\n//                 }}\r\n//               >\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Month</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>EMI</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Principal</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Interest</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Balance</Typography>\r\n//                 </Box>\r\n//               </Box>\r\n\r\n//               {/* Scrollable data rows */}\r\n//               <Box sx={{ overflowX: \"auto\", maxHeight: 400 }}>\r\n//                 {paginatedEntries.map((row) => (\r\n//                   <Box\r\n//                     key={row.month}\r\n//                     sx={{\r\n//                       display: \"flex\",\r\n//                       justifyContent: \"space-between\",\r\n//                       paddingY: 1,\r\n//                       borderBottom: \"1px solid #ddd\",\r\n//                     }}\r\n//                   >\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{row.month}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>\r\n//                         {selectedCurrency}{\" \"}\r\n//                         {(row.emi * conversionRate).toFixed(2)}\r\n//                       </Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>\r\n//                         {selectedCurrency}{\" \"}\r\n//                         {(row.principal * conversionRate).toFixed(2)}\r\n//                       </Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>\r\n//                         {selectedCurrency}{\" \"}\r\n//                         {(row.interest * conversionRate).toFixed(2)}\r\n//                       </Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>\r\n//                         {selectedCurrency}{\" \"}\r\n//                         {(row.balance * conversionRate).toFixed(2)}\r\n//                       </Typography>\r\n//                     </Box>\r\n//                   </Box>\r\n//                 ))}\r\n//               </Box>\r\n//             </Paper>\r\n\r\n//             <Box\r\n//               sx={{\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"space-between\",\r\n//                 mt: 3,\r\n//                 flexWrap: \"wrap\",\r\n//                 gap: 2,\r\n//               }}\r\n//             >\r\n//               <Typography variant=\"h6\">\r\n//                 Total Entries: {amortizationSchedule.length}\r\n//               </Typography>\r\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n//                 <FormControl size=\"small\">\r\n//                   <InputLabel>Entries</InputLabel>\r\n//                   <Select\r\n//                     value={entriesPerPage}\r\n//                     label=\"Entries\"\r\n//                     onChange={handleChangeEntries}\r\n//                   >\r\n//                     {[10, 25, 50, 100].map((num) => (\r\n//                       <MenuItem key={num} value={num}>\r\n//                         {num}\r\n//                       </MenuItem>\r\n//                     ))}\r\n//                   </Select>\r\n//                 </FormControl>\r\n//                 <Pagination\r\n//                   count={totalPages}\r\n//                   page={page}\r\n//                   onChange={handlePageChange}\r\n//                   sx={{\r\n//                     backgroundColor:\r\n//                       theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#ffffff\", \r\n//                     borderRadius: 1,\r\n//                   }}\r\n//                 />\r\n//               </Box>\r\n//             </Box>\r\n//           </Box>\r\n//         )}\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Pagination,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useTheme } from \"@mui/material/styles\"; // Import theme hook\r\n\r\nfunction HOME() {\r\n  const theme = useTheme(); // Use theme hook to get current theme\r\n\r\n  const [loanAmount, setLoanAmount] = useState(\"\");\r\n  const [interestRate, setInterestRate] = useState(\"\");\r\n  const [loanTenure, setLoanTenure] = useState(\"\");\r\n  const [emi, setEmi] = useState(null);\r\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n  const [exchangeRates, setExchangeRates] = useState({});\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\"\r\n      )\r\n      .then((res) => setExchangeRates(res.data.conversion_rates))\r\n      .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n  }, []);\r\n\r\n  const calculateEMI = () => {\r\n    const principal = parseFloat(loanAmount);\r\n    const rate = parseFloat(interestRate) / 12 / 100;\r\n    const tenure = parseFloat(loanTenure) * 12;\r\n    const emiAmount =\r\n      (principal * rate * Math.pow(1 + rate, tenure)) /\r\n      (Math.pow(1 + rate, tenure) - 1);\r\n\r\n    setEmi(emiAmount.toFixed(2));\r\n\r\n    let balance = principal;\r\n    let schedule = [];\r\n    for (let i = 1; i <= tenure; i++) {\r\n      let interestPayment = balance * rate;\r\n      let principalPayment = emiAmount - interestPayment;\r\n      balance -= principalPayment;\r\n\r\n      schedule.push({\r\n        month: i,\r\n        emi: emiAmount,\r\n        principal: principalPayment,\r\n        interest: interestPayment,\r\n        balance: balance,\r\n      });\r\n    }\r\n    setAmortizationSchedule(schedule);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleCurrencyChange = (e) => {\r\n    setSelectedCurrency(e.target.value);\r\n  };\r\n\r\n  const handleChangeEntries = (e) => {\r\n    setEntriesPerPage(parseInt(e.target.value));\r\n    setPage(1);\r\n  };\r\n\r\n  const handlePageChange = (_, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n  const paginatedEntries = amortizationSchedule.slice(\r\n    (page - 1) * entriesPerPage,\r\n    page * entriesPerPage\r\n  );\r\n\r\n  return (\r\n    <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n          Loan EMI Calculator\r\n        </Typography>\r\n\r\n        <Grid container spacing={2} justifyContent=\"center\">\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              label=\"Loan Amount\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={loanAmount}\r\n              onChange={(e) => setLoanAmount(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              label=\"Interest Rate (%)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={interestRate}\r\n              onChange={(e) => setInterestRate(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              label=\"Loan Tenure (years)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={loanTenure}\r\n              onChange={(e) => setLoanTenure(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TextField\r\n              select\r\n              label=\"Currency\"\r\n              fullWidth\r\n              value={selectedCurrency}\r\n              onChange={handleCurrencyChange}\r\n            >\r\n              {Object.keys(exchangeRates).map((currency) => (\r\n                <MenuItem key={currency} value={currency}>\r\n                  {currency}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\r\n          <Button variant=\"contained\" onClick={calculateEMI}>\r\n            Calculate EMI\r\n          </Button>\r\n        </Box>\r\n\r\n        {emi && (\r\n          <Box sx={{ mt: 3, display: \"flex\", justifyContent: \"center\" }}>\r\n            <Typography variant=\"h6\">\r\n              Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"h6\" sx={{ ml: 2 }}>\r\n              Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n              {(emi * conversionRate).toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {amortizationSchedule.length > 0 && (\r\n          <Box sx={{ mt: 5 }}>\r\n            <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n              Amortization Schedule ({selectedCurrency})\r\n            </Typography>\r\n\r\n            <Paper sx={{ padding: 2, overflowX: \"auto\" }}>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  minWidth: \"600px\", // ensures horizontal scroll\r\n                  fontWeight: \"bold\",\r\n                  borderBottom: \"2px solid #000\",\r\n                  paddingY: 1,\r\n                  flexWrap: \"wrap\", // Allows wrap on small screens\r\n                }}\r\n              >\r\n                <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                  <Typography>Month</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                  <Typography>EMI</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                  <Typography>Principal</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                  <Typography>Interest</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                  <Typography>Balance</Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Scrollable data rows */}\r\n              <Box sx={{ overflowX: \"auto\", maxHeight: 400 }}>\r\n                {paginatedEntries.map((row) => (\r\n                  <Box\r\n                    key={row.month}\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      paddingY: 1,\r\n                      borderBottom: \"1px solid #ddd\",\r\n                      flexWrap: \"wrap\", // Allows wrap on small screens\r\n                    }}\r\n                  >\r\n                    <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                      <Typography>{row.month}</Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.emi * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.principal * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.interest * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\", minWidth: \"120px\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.balance * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Paper>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                mt: 3,\r\n                flexWrap: \"wrap\",\r\n                gap: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\">\r\n                Total Entries: {amortizationSchedule.length}\r\n              </Typography>\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n                <FormControl size=\"small\">\r\n                  <InputLabel>Entries</InputLabel>\r\n                  <Select\r\n                    value={entriesPerPage}\r\n                    label=\"Entries\"\r\n                    onChange={handleChangeEntries}\r\n                  >\r\n                    {[10, 25, 50, 100].map((num) => (\r\n                      <MenuItem key={num} value={num}>\r\n                        {num}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <Pagination\r\n                  count={totalPages}\r\n                  page={page}\r\n                  onChange={handlePageChange}\r\n                  sx={{\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#F5F5F5\", // Theme-based background\r\n                    borderRadius: 1,\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HOME;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}