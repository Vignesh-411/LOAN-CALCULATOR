{"ast":null,"code":"var _jsxFileName = \"P:\\\\New folder\\\\model\\\\src\\\\COMPONENTS\\\\EXCHANGE .js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EXCHANGE() {\n  _s();\n  const [rates, setRates] = useState({});\n  const [base, setBase] = useState(\"USD\");\n  useEffect(() => {\n    fetch(`https://api.frankfurter.app/latest?from=${base}`).then(res => res.json()).then(data => setRates(data.rates)).catch(err => console.error(\"Error fetching exchange rates:\", err));\n  }, [base]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Live Exchange Rates (Base: \", base, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setBase(e.target.value),\n      value: base,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USD\",\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EUR\",\n        children: \"EUR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"INR\",\n        children: \"INR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GBP\",\n        children: \"GBP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(rates).map(([currency, rate]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [currency, \": \", rate]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(EXCHANGE, \"qed5KNtNBmzku2Y9opBr2oQxeic=\");\n_c = EXCHANGE;\nexport default EXCHANGE;\nvar _c;\n$RefreshReg$(_c, \"EXCHANGE\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EXCHANGE","_s","rates","setRates","base","setBase","fetch","then","res","json","data","catch","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","Object","entries","map","currency","rate","_c","$RefreshReg$"],"sources":["P:/New folder/model/src/COMPONENTS/EXCHANGE .js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction EXCHANGE() {\r\n  const [rates, setRates] = useState({});\r\n  const [base, setBase] = useState(\"USD\");\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.frankfurter.app/latest?from=${base}`)\r\n      .then(res => res.json())\r\n      .then(data => setRates(data.rates))\r\n      .catch(err => console.error(\"Error fetching exchange rates:\", err));\r\n  }, [base]);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Live Exchange Rates (Base: {base})</h2>\r\n      <select onChange={e => setBase(e.target.value)} value={base}>\r\n        <option value=\"USD\">USD</option>\r\n        <option value=\"EUR\">EUR</option>\r\n        <option value=\"INR\">INR</option>\r\n        <option value=\"GBP\">GBP</option>\r\n      </select>\r\n      <ul>\r\n        {Object.entries(rates).map(([currency, rate]) => (\r\n          <li key={currency}>\r\n            {currency}: {rate}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EXCHANGE;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,2CAA2CF,IAAI,EAAE,CAAC,CACrDG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACR,KAAK,CAAC,CAAC,CAClCS,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC,CAAC;EACvE,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BlB,OAAA;MAAAkB,QAAA,GAAI,6BAA2B,EAACb,IAAI,EAAC,GAAC;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CtB,OAAA;MAAQuB,QAAQ,EAAEC,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAErB,IAAK;MAAAa,QAAA,gBAC1DlB,OAAA;QAAQ0B,KAAK,EAAC,KAAK;QAAAR,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCtB,OAAA;QAAQ0B,KAAK,EAAC,KAAK;QAAAR,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCtB,OAAA;QAAQ0B,KAAK,EAAC,KAAK;QAAAR,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCtB,OAAA;QAAQ0B,KAAK,EAAC,KAAK;QAAAR,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACTtB,OAAA;MAAAkB,QAAA,EACGS,MAAM,CAACC,OAAO,CAACzB,KAAK,CAAC,CAAC0B,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,IAAI,CAAC,kBAC1C/B,OAAA;QAAAkB,QAAA,GACGY,QAAQ,EAAC,IAAE,EAACC,IAAI;MAAA,GADVD,QAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACpB,EAAA,CA7BQD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA+BjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}