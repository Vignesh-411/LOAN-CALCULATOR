{"ast":null,"code":"var _jsxFileName = \"P:\\\\New folder\\\\model\\\\src\\\\COMPONENTS\\\\HOME.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   Box,\n//   Typography,\n//   TextField,\n//   Button,\n//   MenuItem,\n//   Card,\n//   CardContent,\n//   Paper,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   Pagination,\n// } from \"@mui/material\";\n// import axios from \"axios\";\n\n// function HOME() {\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n//   const [exchangeRates, setExchangeRates] = useState({});\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\n//   const [page, setPage] = useState(1);\n\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\n//   }, []);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount,\n//         principal: principalPayment,\n//         interest: interestPayment,\n//         balance: balance,\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//     setPage(1);\n//   };\n\n//   const handleReset = () => {\n//     setLoanAmount(\"\");\n//     setInterestRate(\"\");\n//     setLoanTenure(\"\");\n//     setEmi(null);\n//     setAmortizationSchedule([]);\n//   };\n\n//   const handleCurrencyChange = (e) => {\n//     setSelectedCurrency(e.target.value);\n//   };\n\n//   const handleChangeEntries = (e) => {\n//     setEntriesPerPage(parseInt(e.target.value));\n//     setPage(1);\n//   };\n\n//   const handlePageChange = (_, value) => {\n//     setPage(value);\n//   };\n\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\n\n//   const paginatedEntries = amortizationSchedule.slice(\n//     (page - 1) * entriesPerPage,\n//     page * entriesPerPage\n//   );\n\n//   return (\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\n//       <CardContent>\n//         <Typography variant=\"h4\" gutterBottom>\n//           Loan EMI Calculator\n//         </Typography>\n\n//         <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\n//           <TextField\n//             label=\"Loan Amount\"\n//             variant=\"outlined\"\n//             value={loanAmount}\n//             onChange={(e) => setLoanAmount(e.target.value)}\n//           />\n//           <TextField\n//             label=\"Interest Rate (%)\"\n//             variant=\"outlined\"\n//             value={interestRate}\n//             onChange={(e) => setInterestRate(e.target.value)}\n//           />\n//           <TextField\n//             label=\"Loan Tenure (years)\"\n//             variant=\"outlined\"\n//             value={loanTenure}\n//             onChange={(e) => setLoanTenure(e.target.value)}\n//           />\n//           <TextField\n//             select\n//             label=\"Currency\"\n//             value={selectedCurrency}\n//             onChange={handleCurrencyChange}\n//           >\n//             {Object.keys(exchangeRates).map((currency) => (\n//               <MenuItem key={currency} value={currency}>\n//                 {currency}\n//               </MenuItem>\n//             ))}\n//           </TextField>\n//         </Box>\n\n//         <Button variant=\"contained\" onClick={calculateEMI}>\n//           Calculate EMI\n//         </Button>\n\n//         {emi && (\n//           <Box sx={{ mt: 3 }}>\n//             <Typography variant=\"h6\">\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\n//               {(emi * conversionRate).toFixed(2)}\n//             </Typography>\n//           </Box>\n//         )}\n\n//         {amortizationSchedule.length > 0 && (\n//           <Box sx={{ mt: 5 }}>\n//             <Box\n//               sx={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-between\",\n//                 alignItems: \"center\",\n//                 mb: 2,\n//                 flexWrap: \"wrap\",\n//               }}\n//             >\n//               <Typography variant=\"h5\">\n//                 Amortization Schedule ({selectedCurrency})\n//               </Typography>\n//               <Button variant=\"outlined\" color=\"error\" onClick={handleReset}>\n//                 Reset Table\n//               </Button>\n//             </Box>\n\n//             <Paper sx={{ overflowX: \"auto\" }}>\n//               <Box\n//                 sx={{\n//                   display: \"flex\",\n//                   minWidth: \"600px\",\n//                   fontWeight: \"bold\",\n//                   borderBottom: \"2px solid #000\",\n//                   paddingY: 1,\n//                   paddingX: 2,\n//                 }}\n//               >\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Month</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>EMI ({selectedCurrency})</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Principal ({selectedCurrency})</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Interest ({selectedCurrency})</Typography>\n//                 </Box>\n//                 <Box sx={{ width: \"20%\" }}>\n//                   <Typography>Balance ({selectedCurrency})</Typography>\n//                 </Box>\n//               </Box>\n\n//               {/* Scrollable table body */}\n//               <Box\n//                 sx={{\n//                   maxHeight: 400,\n//                   overflowY: \"auto\",\n//                   paddingX: 2,\n//                 }}\n//               >\n//                 {paginatedEntries.map((row) => (\n//                   <Box\n//                     key={row.month}\n//                     sx={{\n//                       display: \"flex\",\n//                       justifyContent: \"space-between\",\n//                       paddingY: 1,\n//                       borderBottom: \"1px solid #ddd\",\n//                       minWidth: \"600px\",\n//                     }}\n//                   >\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{row.month}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.emi * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.principal * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.interest * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                     <Box sx={{ width: \"20%\" }}>\n//                       <Typography>{(row.balance * conversionRate).toFixed(2)}</Typography>\n//                     </Box>\n//                   </Box>\n//                 ))}\n//               </Box>\n//             </Paper>\n\n//             <Box\n//               sx={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-between\",\n//                 mt: 3,\n//                 flexWrap: \"wrap\",\n//                 gap: 2,\n//               }}\n//             >\n//               <Typography variant=\"h6\">\n//                 Total Entries: {amortizationSchedule.length}\n//               </Typography>\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n//                 <FormControl size=\"small\">\n//                   <InputLabel>Entries</InputLabel>\n//                   <Select\n//                     value={entriesPerPage}\n//                     label=\"Entries\"\n//                     onChange={handleChangeEntries}\n//                   >\n//                     {[10, 25, 50, 100].map((num) => (\n//                       <MenuItem key={num} value={num}>\n//                         {num}\n//                       </MenuItem>\n//                     ))}\n//                   </Select>\n//                 </FormControl>\n//                 <Pagination\n//                   count={totalPages}\n//                   page={page}\n//                   onChange={handlePageChange}\n//                   sx={{ backgroundColor: \"#1E1E1E\", borderRadius: 1 }}\n//                 />\n//               </Box>\n//             </Box>\n//           </Box>\n//         )}\n//       </CardContent>\n//     </Card>\n//   );\n// }\n\n// export default HOME;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Button, MenuItem, Card, CardContent, Paper, FormControl, InputLabel, Select, Pagination } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useTheme } from \"@mui/material/styles\"; // Import theme hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HOME() {\n  _s();\n  const theme = useTheme(); // Use theme hook to get current theme\n\n  const [loanAmount, setLoanAmount] = useState(\"\");\n  const [interestRate, setInterestRate] = useState(\"\");\n  const [loanTenure, setLoanTenure] = useState(\"\");\n  const [emi, setEmi] = useState(null);\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n  useEffect(() => {\n    axios.get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\").then(res => setExchangeRates(res.data.conversion_rates)).catch(err => console.error(\"Error fetching exchange rates:\", err));\n  }, []);\n  const calculateEMI = () => {\n    const principal = parseFloat(loanAmount);\n    const rate = parseFloat(interestRate) / 12 / 100;\n    const tenure = parseFloat(loanTenure) * 12;\n    const emiAmount = principal * rate * Math.pow(1 + rate, tenure) / (Math.pow(1 + rate, tenure) - 1);\n    setEmi(emiAmount.toFixed(2));\n    let balance = principal;\n    let schedule = [];\n    for (let i = 1; i <= tenure; i++) {\n      let interestPayment = balance * rate;\n      let principalPayment = emiAmount - interestPayment;\n      balance -= principalPayment;\n      schedule.push({\n        month: i,\n        emi: emiAmount,\n        principal: principalPayment,\n        interest: interestPayment,\n        balance: balance\n      });\n    }\n    setAmortizationSchedule(schedule);\n    setPage(1);\n  };\n  const handleCurrencyChange = e => {\n    setSelectedCurrency(e.target.value);\n  };\n  const handleChangeEntries = e => {\n    setEntriesPerPage(parseInt(e.target.value));\n    setPage(1);\n  };\n  const handlePageChange = (_, value) => {\n    setPage(value);\n  };\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\n  const paginatedEntries = amortizationSchedule.slice((page - 1) * entriesPerPage, page * entriesPerPage);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: \"40px auto\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Loan EMI Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          gap: 2,\n          flexWrap: \"wrap\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Loan Amount\",\n          variant: \"outlined\",\n          value: loanAmount,\n          onChange: e => setLoanAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Interest Rate (%)\",\n          variant: \"outlined\",\n          value: interestRate,\n          onChange: e => setInterestRate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Loan Tenure (years)\",\n          variant: \"outlined\",\n          value: loanTenure,\n          onChange: e => setLoanTenure(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"Currency\",\n          value: selectedCurrency,\n          onChange: handleCurrencyChange,\n          children: Object.keys(exchangeRates).map(currency => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: currency,\n            children: currency\n          }, currency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: calculateEMI,\n        children: \"Calculate EMI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), emi && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Estimated EMI in INR: \\u20B9\", parseFloat(emi).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Estimated EMI in \", selectedCurrency, \": \", selectedCurrency, \" \", (emi * conversionRate).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), amortizationSchedule.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: [\"Amortization Schedule (\", selectedCurrency, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            padding: 2,\n            overflowX: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              minWidth: \"600px\",\n              // ensures horizontal scroll\n              fontWeight: \"bold\",\n              borderBottom: \"2px solid #000\",\n              paddingY: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"EMI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Principal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Interest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              overflowX: \"auto\",\n              maxHeight: 400\n            },\n            children: paginatedEntries.map(row => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                paddingY: 1,\n                borderBottom: \"1px solid #ddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: row.month\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.emi * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.principal * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.interest * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [selectedCurrency, \" \", (row.balance * conversionRate).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this)]\n            }, row.month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            mt: 3,\n            flexWrap: \"wrap\",\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Entries: \", amortizationSchedule.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Entries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: entriesPerPage,\n                label: \"Entries\",\n                onChange: handleChangeEntries,\n                children: [10, 25, 50, 100].map(num => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              count: totalPages,\n              page: page,\n              onChange: handlePageChange,\n              sx: {\n                backgroundColor: theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#ffffff\",\n                borderRadius: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n}\n_s(HOME, \"BggEZxgYqK/MnDAaigbqeFbfU1c=\", false, function () {\n  return [useTheme];\n});\n_c = HOME;\nexport default HOME;\nvar _c;\n$RefreshReg$(_c, \"HOME\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","MenuItem","Card","CardContent","Paper","FormControl","InputLabel","Select","Pagination","axios","useTheme","jsxDEV","_jsxDEV","HOME","_s","theme","loanAmount","setLoanAmount","interestRate","setInterestRate","loanTenure","setLoanTenure","emi","setEmi","amortizationSchedule","setAmortizationSchedule","exchangeRates","setExchangeRates","selectedCurrency","setSelectedCurrency","entriesPerPage","setEntriesPerPage","page","setPage","totalPages","Math","ceil","length","get","then","res","data","conversion_rates","catch","err","console","error","calculateEMI","principal","parseFloat","rate","tenure","emiAmount","pow","toFixed","balance","schedule","i","interestPayment","principalPayment","push","month","interest","handleCurrencyChange","e","target","value","handleChangeEntries","parseInt","handlePageChange","_","conversionRate","paginatedEntries","slice","sx","margin","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","flexWrap","mb","label","onChange","select","Object","keys","map","currency","onClick","mt","overflowX","minWidth","fontWeight","borderBottom","paddingY","width","maxHeight","row","justifyContent","alignItems","size","num","count","backgroundColor","palette","mode","borderRadius","_c","$RefreshReg$"],"sources":["P:/New folder/model/src/COMPONENTS/HOME.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Typography,\r\n//   TextField,\r\n//   Button,\r\n//   MenuItem,\r\n//   Card,\r\n//   CardContent,\r\n//   Paper,\r\n//   FormControl,\r\n//   InputLabel,\r\n//   Select,\r\n//   Pagination,\r\n// } from \"@mui/material\";\r\n// import axios from \"axios\";\r\n\r\n// function HOME() {\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n//   const [exchangeRates, setExchangeRates] = useState({});\r\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n//   const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n//   const [page, setPage] = useState(1);\r\n\r\n//   const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\r\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\r\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n//   }, []);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount,\r\n//         principal: principalPayment,\r\n//         interest: interestPayment,\r\n//         balance: balance,\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handleReset = () => {\r\n//     setLoanAmount(\"\");\r\n//     setInterestRate(\"\");\r\n//     setLoanTenure(\"\");\r\n//     setEmi(null);\r\n//     setAmortizationSchedule([]);\r\n//   };\r\n\r\n//   const handleCurrencyChange = (e) => {\r\n//     setSelectedCurrency(e.target.value);\r\n//   };\r\n\r\n//   const handleChangeEntries = (e) => {\r\n//     setEntriesPerPage(parseInt(e.target.value));\r\n//     setPage(1);\r\n//   };\r\n\r\n//   const handlePageChange = (_, value) => {\r\n//     setPage(value);\r\n//   };\r\n\r\n//   const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n//   const paginatedEntries = amortizationSchedule.slice(\r\n//     (page - 1) * entriesPerPage,\r\n//     page * entriesPerPage\r\n//   );\r\n\r\n//   return (\r\n//     <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n//       <CardContent>\r\n//         <Typography variant=\"h4\" gutterBottom>\r\n//           Loan EMI Calculator\r\n//         </Typography>\r\n\r\n//         <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\r\n//           <TextField\r\n//             label=\"Loan Amount\"\r\n//             variant=\"outlined\"\r\n//             value={loanAmount}\r\n//             onChange={(e) => setLoanAmount(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             label=\"Interest Rate (%)\"\r\n//             variant=\"outlined\"\r\n//             value={interestRate}\r\n//             onChange={(e) => setInterestRate(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             label=\"Loan Tenure (years)\"\r\n//             variant=\"outlined\"\r\n//             value={loanTenure}\r\n//             onChange={(e) => setLoanTenure(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             select\r\n//             label=\"Currency\"\r\n//             value={selectedCurrency}\r\n//             onChange={handleCurrencyChange}\r\n//           >\r\n//             {Object.keys(exchangeRates).map((currency) => (\r\n//               <MenuItem key={currency} value={currency}>\r\n//                 {currency}\r\n//               </MenuItem>\r\n//             ))}\r\n//           </TextField>\r\n//         </Box>\r\n\r\n//         <Button variant=\"contained\" onClick={calculateEMI}>\r\n//           Calculate EMI\r\n//         </Button>\r\n\r\n//         {emi && (\r\n//           <Box sx={{ mt: 3 }}>\r\n//             <Typography variant=\"h6\">\r\n//               Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n//               {(emi * conversionRate).toFixed(2)}\r\n//             </Typography>\r\n//           </Box>\r\n//         )}\r\n\r\n//         {amortizationSchedule.length > 0 && (\r\n//           <Box sx={{ mt: 5 }}>\r\n//             <Box\r\n//               sx={{\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"space-between\",\r\n//                 alignItems: \"center\",\r\n//                 mb: 2,\r\n//                 flexWrap: \"wrap\",\r\n//               }}\r\n//             >\r\n//               <Typography variant=\"h5\">\r\n//                 Amortization Schedule ({selectedCurrency})\r\n//               </Typography>\r\n//               <Button variant=\"outlined\" color=\"error\" onClick={handleReset}>\r\n//                 Reset Table\r\n//               </Button>\r\n//             </Box>\r\n\r\n//             <Paper sx={{ overflowX: \"auto\" }}>\r\n//               <Box\r\n//                 sx={{\r\n//                   display: \"flex\",\r\n//                   minWidth: \"600px\",\r\n//                   fontWeight: \"bold\",\r\n//                   borderBottom: \"2px solid #000\",\r\n//                   paddingY: 1,\r\n//                   paddingX: 2,\r\n//                 }}\r\n//               >\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Month</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>EMI ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Principal ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Interest ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//                 <Box sx={{ width: \"20%\" }}>\r\n//                   <Typography>Balance ({selectedCurrency})</Typography>\r\n//                 </Box>\r\n//               </Box>\r\n\r\n//               {/* Scrollable table body */}\r\n//               <Box\r\n//                 sx={{\r\n//                   maxHeight: 400,\r\n//                   overflowY: \"auto\",\r\n//                   paddingX: 2,\r\n//                 }}\r\n//               >\r\n//                 {paginatedEntries.map((row) => (\r\n//                   <Box\r\n//                     key={row.month}\r\n//                     sx={{\r\n//                       display: \"flex\",\r\n//                       justifyContent: \"space-between\",\r\n//                       paddingY: 1,\r\n//                       borderBottom: \"1px solid #ddd\",\r\n//                       minWidth: \"600px\",\r\n//                     }}\r\n//                   >\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{row.month}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.emi * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.principal * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.interest * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                     <Box sx={{ width: \"20%\" }}>\r\n//                       <Typography>{(row.balance * conversionRate).toFixed(2)}</Typography>\r\n//                     </Box>\r\n//                   </Box>\r\n//                 ))}\r\n//               </Box>\r\n//             </Paper>\r\n\r\n//             <Box\r\n//               sx={{\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"space-between\",\r\n//                 mt: 3,\r\n//                 flexWrap: \"wrap\",\r\n//                 gap: 2,\r\n//               }}\r\n//             >\r\n//               <Typography variant=\"h6\">\r\n//                 Total Entries: {amortizationSchedule.length}\r\n//               </Typography>\r\n//               <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n//                 <FormControl size=\"small\">\r\n//                   <InputLabel>Entries</InputLabel>\r\n//                   <Select\r\n//                     value={entriesPerPage}\r\n//                     label=\"Entries\"\r\n//                     onChange={handleChangeEntries}\r\n//                   >\r\n//                     {[10, 25, 50, 100].map((num) => (\r\n//                       <MenuItem key={num} value={num}>\r\n//                         {num}\r\n//                       </MenuItem>\r\n//                     ))}\r\n//                   </Select>\r\n//                 </FormControl>\r\n//                 <Pagination\r\n//                   count={totalPages}\r\n//                   page={page}\r\n//                   onChange={handlePageChange}\r\n//                   sx={{ backgroundColor: \"#1E1E1E\", borderRadius: 1 }}\r\n//                 />\r\n//               </Box>\r\n//             </Box>\r\n//           </Box>\r\n//         )}\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Pagination,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useTheme } from \"@mui/material/styles\"; // Import theme hook\r\n\r\nfunction HOME() {\r\n  const theme = useTheme(); // Use theme hook to get current theme\r\n\r\n  const [loanAmount, setLoanAmount] = useState(\"\");\r\n  const [interestRate, setInterestRate] = useState(\"\");\r\n  const [loanTenure, setLoanTenure] = useState(\"\");\r\n  const [emi, setEmi] = useState(null);\r\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n  const [exchangeRates, setExchangeRates] = useState({});\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\"\r\n      )\r\n      .then((res) => setExchangeRates(res.data.conversion_rates))\r\n      .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n  }, []);\r\n\r\n  const calculateEMI = () => {\r\n    const principal = parseFloat(loanAmount);\r\n    const rate = parseFloat(interestRate) / 12 / 100;\r\n    const tenure = parseFloat(loanTenure) * 12;\r\n    const emiAmount =\r\n      (principal * rate * Math.pow(1 + rate, tenure)) /\r\n      (Math.pow(1 + rate, tenure) - 1);\r\n\r\n    setEmi(emiAmount.toFixed(2));\r\n\r\n    let balance = principal;\r\n    let schedule = [];\r\n    for (let i = 1; i <= tenure; i++) {\r\n      let interestPayment = balance * rate;\r\n      let principalPayment = emiAmount - interestPayment;\r\n      balance -= principalPayment;\r\n\r\n      schedule.push({\r\n        month: i,\r\n        emi: emiAmount,\r\n        principal: principalPayment,\r\n        interest: interestPayment,\r\n        balance: balance,\r\n      });\r\n    }\r\n    setAmortizationSchedule(schedule);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleCurrencyChange = (e) => {\r\n    setSelectedCurrency(e.target.value);\r\n  };\r\n\r\n  const handleChangeEntries = (e) => {\r\n    setEntriesPerPage(parseInt(e.target.value));\r\n    setPage(1);\r\n  };\r\n\r\n  const handlePageChange = (_, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n  const paginatedEntries = amortizationSchedule.slice(\r\n    (page - 1) * entriesPerPage,\r\n    page * entriesPerPage\r\n  );\r\n\r\n  return (\r\n    <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Loan EMI Calculator\r\n        </Typography>\r\n\r\n        <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\r\n          <TextField\r\n            label=\"Loan Amount\"\r\n            variant=\"outlined\"\r\n            value={loanAmount}\r\n            onChange={(e) => setLoanAmount(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Interest Rate (%)\"\r\n            variant=\"outlined\"\r\n            value={interestRate}\r\n            onChange={(e) => setInterestRate(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Loan Tenure (years)\"\r\n            variant=\"outlined\"\r\n            value={loanTenure}\r\n            onChange={(e) => setLoanTenure(e.target.value)}\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Currency\"\r\n            value={selectedCurrency}\r\n            onChange={handleCurrencyChange}\r\n          >\r\n            {Object.keys(exchangeRates).map((currency) => (\r\n              <MenuItem key={currency} value={currency}>\r\n                {currency}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n\r\n        <Button variant=\"contained\" onClick={calculateEMI}>\r\n          Calculate EMI\r\n        </Button>\r\n\r\n        {emi && (\r\n          <Box sx={{ mt: 3 }}>\r\n            <Typography variant=\"h6\">\r\n              Estimated EMI in INR: â‚¹{parseFloat(emi).toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n              {(emi * conversionRate).toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {amortizationSchedule.length > 0 && (\r\n          <Box sx={{ mt: 5 }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Amortization Schedule ({selectedCurrency})\r\n            </Typography>\r\n\r\n            <Paper sx={{ padding: 2, overflowX: \"auto\" }}>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  minWidth: \"600px\", // ensures horizontal scroll\r\n                  fontWeight: \"bold\",\r\n                  borderBottom: \"2px solid #000\",\r\n                  paddingY: 1,\r\n                }}\r\n              >\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Month</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>EMI</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Principal</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Interest</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Balance</Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Scrollable data rows */}\r\n              <Box sx={{ overflowX: \"auto\", maxHeight: 400 }}>\r\n                {paginatedEntries.map((row) => (\r\n                  <Box\r\n                    key={row.month}\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      paddingY: 1,\r\n                      borderBottom: \"1px solid #ddd\",\r\n                    }}\r\n                  >\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>{row.month}</Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.emi * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.principal * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.interest * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>\r\n                        {selectedCurrency}{\" \"}\r\n                        {(row.balance * conversionRate).toFixed(2)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Paper>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                mt: 3,\r\n                flexWrap: \"wrap\",\r\n                gap: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\">\r\n                Total Entries: {amortizationSchedule.length}\r\n              </Typography>\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n                <FormControl size=\"small\">\r\n                  <InputLabel>Entries</InputLabel>\r\n                  <Select\r\n                    value={entriesPerPage}\r\n                    label=\"Entries\"\r\n                    onChange={handleChangeEntries}\r\n                  >\r\n                    {[10, 25, 50, 100].map((num) => (\r\n                      <MenuItem key={num} value={num}>\r\n                        {num}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <Pagination\r\n                  count={totalPages}\r\n                  page={page}\r\n                  onChange={handlePageChange}\r\n                  sx={{\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"dark\" ? \"#1E1E1E\" : \"#ffffff\", \r\n                    borderRadius: 1,\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HOME;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}