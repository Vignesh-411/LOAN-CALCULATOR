{"ast":null,"code":"var _jsxFileName = \"P:\\\\New folder\\\\model\\\\src\\\\COMPONENTS\\\\EXCHANGE .js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography, Select, MenuItem, Pagination, FormControl, InputLabel, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EXCHANGE() {\n  _s();\n  const [rates, setRates] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const base = \"USD\";\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/${base}`);\n        const data = await response.json();\n        if (data.result === \"success\") {\n          setRates(data.conversion_rates);\n          setLoading(false);\n        } else {\n          throw new Error(\"API returned error\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch exchange rates.\");\n        setLoading(false);\n      }\n    };\n    fetchRates();\n  }, []);\n  const entries = Object.entries(rates);\n  const totalPages = Math.ceil(entries.length / entriesPerPage);\n  const handleChangeEntries = event => {\n    setEntriesPerPage(event.target.value);\n    setPage(1); // Reset to first page\n  };\n  const handlePageChange = (_, value) => {\n    setPage(value);\n  };\n  const displayedEntries = entries.slice((page - 1) * entriesPerPage, page * entriesPerPage);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: [\"Exchange Rates (Base: \", base, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading exchange rates...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          padding: 2\n        },\n        children: displayedEntries.map(([currency, value]) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"8px 0\",\n            borderBottom: \"1px solid #ddd\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, currency, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"end\",\n          marginTop: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: entriesPerPage,\n            label: \"Entries\",\n            onChange: handleChangeEntries,\n            children: [10, 25, 50, 100].map(num => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: num,\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          count: totalPages,\n          page: page,\n          onChange: handlePageChange,\n          sx: {\n            marginLeft: 2,\n            backgroundColor: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(EXCHANGE, \"Kfoniuf4wTaZDs/YD9CxOrEC7W4=\");\n_c = EXCHANGE;\nexport default EXCHANGE;\nvar _c;\n$RefreshReg$(_c, \"EXCHANGE\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Select","MenuItem","Pagination","FormControl","InputLabel","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","EXCHANGE","_s","rates","setRates","loading","setLoading","error","setError","entriesPerPage","setEntriesPerPage","page","setPage","base","fetchRates","response","fetch","data","json","result","conversion_rates","Error","err","entries","Object","totalPages","Math","ceil","length","handleChangeEntries","event","target","value","handlePageChange","_","displayedEntries","slice","sx","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","elevation","map","currency","display","justifyContent","borderBottom","marginTop","size","label","onChange","num","count","marginLeft","backgroundColor","_c","$RefreshReg$"],"sources":["P:/New folder/model/src/COMPONENTS/EXCHANGE .js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  Pagination,\r\n  FormControl,\r\n  InputLabel,\r\n  Paper,\r\n} from \"@mui/material\";\r\n\r\nfunction EXCHANGE() {\r\n  const [rates, setRates] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const base = \"USD\";\r\n\r\n  useEffect(() => {\r\n    const fetchRates = async () => {\r\n      try {\r\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/${base}`);\r\n        const data = await response.json();\r\n        if (data.result === \"success\") {\r\n          setRates(data.conversion_rates);\r\n          setLoading(false);\r\n        } else {\r\n          throw new Error(\"API returned error\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch exchange rates.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRates();\r\n  }, []);\r\n\r\n  const entries = Object.entries(rates);\r\n  const totalPages = Math.ceil(entries.length / entriesPerPage);\r\n\r\n  const handleChangeEntries = (event) => {\r\n    setEntriesPerPage(event.target.value);\r\n    setPage(1); // Reset to first page\r\n  };\r\n\r\n  const handlePageChange = (_, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const displayedEntries = entries.slice((page - 1) * entriesPerPage, page * entriesPerPage);\r\n\r\n  return (\r\n    <Box sx={{ padding: \"20px\" }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Exchange Rates (Base: {base})\r\n      </Typography>\r\n\r\n      {loading ? (\r\n        <Typography>Loading exchange rates...</Typography>\r\n      ) : error ? (\r\n        <Typography color=\"error\">{error}</Typography>\r\n      ) : (\r\n        <>\r\n          \r\n\r\n          <Paper elevation={3} sx={{ padding: 2 }}>\r\n            {displayedEntries.map(([currency, value]) => (\r\n              <Box\r\n                key={currency}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  padding: \"8px 0\",\r\n                  borderBottom: \"1px solid #ddd\",\r\n                }}\r\n              >\r\n                <Typography>{currency}</Typography>\r\n                <Typography>{value}</Typography>\r\n              </Box>\r\n            ))}\r\n          </Paper>\r\n\r\n          <Box sx={{ display: \"flex\", justifyContent: \"end\", marginTop: 3 }}>\r\n          <FormControl size=\"small\">\r\n              <InputLabel>Entries</InputLabel>\r\n              <Select value={entriesPerPage} label=\"Entries\" onChange={handleChangeEntries}>\r\n                {[10, 25, 50, 100].map((num) => (\r\n                  <MenuItem key={num} value={num}>\r\n                    {num}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <Pagination count={totalPages} page={page} onChange={handlePageChange} sx={{ marginLeft: 2, backgroundColor: \"white\" }}/>\r\n          \r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default EXCHANGE;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}