{"ast":null,"code":"// import React, { useState } from \"react\";\n// import FloatingLabelInput from \"../COMPONENTS/FloatingLabelInput.js\";\n\n// function HOME() {\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount.toFixed(2),\n//         principal: principalPayment.toFixed(2),\n//         interest: interestPayment.toFixed(2),\n//         balance: balance.toFixed(2),\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//   };\n\n//   return (\n//     <div style={{ width: \"300px\", margin: \"50px auto\" }}>\n//       <h2>Loan EMI Calculator</h2>\n\n//       <FloatingLabelInput\n//         label=\"Loan Amount\"\n//         value={loanAmount}\n//         onChange={(e) => setLoanAmount(e.target.value)}\n//       />\n//       <FloatingLabelInput\n//         label=\"Interest Rate (%)\"\n//         value={interestRate}\n//         onChange={(e) => setInterestRate(e.target.value)}\n//       />\n//       <FloatingLabelInput\n//         label=\"Loan Tenure (years)\"\n//         value={loanTenure}\n//         onChange={(e) => setLoanTenure(e.target.value)}\n//       />\n\n//       <button onClick={calculateEMI}>Calculate EMI</button>\n\n//       {emi && <h3>Estimated EMI: ₹{emi}</h3>}\n\n//       {amortizationSchedule.length > 0 && (\n//         <table border=\"1\">\n//           <thead>\n//             <tr>\n//               <th>Month</th>\n//               <th>EMI</th>\n//               <th>Principal</th>\n//               <th>Interest</th>\n//               <th>Balance</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {amortizationSchedule.map((row) => (\n//               <tr key={row.month}>\n//                 <td>{row.month}</td>\n//                 <td>{row.emi}</td>\n//                 <td>{row.principal}</td>\n//                 <td>{row.interest}</td>\n//                 <td>{row.balance}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default HOME;\n\n// import React from 'react'\n// import Button from \"@mui/material/Button\";\n// import TextField from '@mui/material/TextField';\n// const HOME = () => {\n\n// return(\n// <>\n\n//   <div className=\"container\">\n//             <div className=\"Input\">\n//               <h2 style={{ marginLeft: \"10px\" }}>Loan Calculator Dashboard</h2>\n//               <TextField label=\"Loan Amount\" variant=\"outlined\" />\n//               <TextField label=\"Interest Rate (%)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\n//               <TextField label=\"Loan Tenure (Years)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\n//             </div>\n\n//             <Button className=\"button\" variant=\"contained\" sx={{ marginTop: \"20px\" }}>\n//               calculate\n//             </Button>\n//           </div>\n// </>\n// );\n// }\n\n// export default HOME;\n\n// import React, { useState, useEffect } from \"react\";\n// import TextField from \"@mui/material/TextField\";\n// import Button from \"@mui/material/Button\";\n// import MenuItem from \"@mui/material/MenuItem\";\n// import axios from \"axios\";\n\n// function HOME() {\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n//   const [exchangeRates, setExchangeRates] = useState({});\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n\n//   // Fetch exchange rates once on mount\n//   useEffect(() => {\n//     axios\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\n//   }, []);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount.toFixed(2),\n//         principal: principalPayment.toFixed(2),\n//         interest: interestPayment.toFixed(2),\n//         balance: balance.toFixed(2),\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//   };\n\n//   const convertedEmi = emi && exchangeRates[selectedCurrency]\n//     ? (emi * exchangeRates[selectedCurrency]).toFixed(2)\n//     : null;\n\n//   return (\n//     <div style={{ maxWidth: \"900px\", margin: \"50px auto\" }}>\n//       <h2>Loan EMI Calculator</h2>\n\n//       <div style={{ display: \"flex\", gap: \"20px\", marginBottom: \"20px\" }}>\n//         <TextField\n//           label=\"Loan Amount\"\n//           variant=\"outlined\"\n//           value={loanAmount}\n//           onChange={(e) => setLoanAmount(e.target.value)}\n//         />\n//         <TextField\n//           label=\"Interest Rate (%)\"\n//           variant=\"outlined\"\n//           value={interestRate}\n//           onChange={(e) => setInterestRate(e.target.value)}\n//         />\n//         <TextField\n//           label=\"Loan Tenure (years)\"\n//           variant=\"outlined\"\n//           value={loanTenure}\n//           onChange={(e) => setLoanTenure(e.target.value)}\n//         />\n//         <TextField\n//           select\n//           label=\"Currency\"\n//           value={selectedCurrency}\n//           onChange={(e) => setSelectedCurrency(e.target.value)}\n//         >\n//           {Object.keys(exchangeRates).map((currency) => (\n//             <MenuItem key={currency} value={currency}>\n//               {currency}\n//             </MenuItem>\n//           ))}\n//         </TextField>\n//       </div>\n\n//       <Button variant=\"contained\" onClick={calculateEMI}>\n//         Calculate EMI\n//       </Button>\n\n//       {emi && (\n//         <div style={{ marginTop: \"20px\" }}>\n//           <h3>Estimated EMI in INR: ₹{emi}</h3>\n//           {convertedEmi && (\n//             <h3>\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency} {convertedEmi}\n//             </h3>\n//           )}\n//         </div>\n//       )}\n\n//       {amortizationSchedule.length > 0 && (\n//         <div style={{ overflowX: \"auto\", marginTop: \"20px\" }}>\n//           <table border=\"1\" cellPadding=\"10\" style={{ minWidth: \"600px\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Month</th>\n//                 <th>EMI</th>\n//                 <th>Principal</th>\n//                 <th>Interest</th>\n//                 <th>Balance</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {amortizationSchedule.slice(0, 10).map((row) => (\n//                 <tr key={row.month}>\n//                   <td>{row.month}</td>\n//                   <td>{row.emi}</td>\n//                   <td>{row.principal}</td>\n//                   <td>{row.interest}</td>\n//                   <td>{row.balance}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//           {/* Pagination buttons can be added here */}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default HOME;","map":{"version":3,"names":[],"sources":["P:/New folder/model/src/COMPONENTS/HOME.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import FloatingLabelInput from \"../COMPONENTS/FloatingLabelInput.js\";\r\n\r\n// function HOME() {\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount.toFixed(2),\r\n//         principal: principalPayment.toFixed(2),\r\n//         interest: interestPayment.toFixed(2),\r\n//         balance: balance.toFixed(2),\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ width: \"300px\", margin: \"50px auto\" }}>\r\n//       <h2>Loan EMI Calculator</h2>\r\n\r\n//       <FloatingLabelInput\r\n//         label=\"Loan Amount\"\r\n//         value={loanAmount}\r\n//         onChange={(e) => setLoanAmount(e.target.value)}\r\n//       />\r\n//       <FloatingLabelInput\r\n//         label=\"Interest Rate (%)\"\r\n//         value={interestRate}\r\n//         onChange={(e) => setInterestRate(e.target.value)}\r\n//       />\r\n//       <FloatingLabelInput\r\n//         label=\"Loan Tenure (years)\"\r\n//         value={loanTenure}\r\n//         onChange={(e) => setLoanTenure(e.target.value)}\r\n//       />\r\n\r\n//       <button onClick={calculateEMI}>Calculate EMI</button>\r\n\r\n//       {emi && <h3>Estimated EMI: ₹{emi}</h3>}\r\n\r\n//       {amortizationSchedule.length > 0 && (\r\n//         <table border=\"1\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Month</th>\r\n//               <th>EMI</th>\r\n//               <th>Principal</th>\r\n//               <th>Interest</th>\r\n//               <th>Balance</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {amortizationSchedule.map((row) => (\r\n//               <tr key={row.month}>\r\n//                 <td>{row.month}</td>\r\n//                 <td>{row.emi}</td>\r\n//                 <td>{row.principal}</td>\r\n//                 <td>{row.interest}</td>\r\n//                 <td>{row.balance}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\n\r\n// import React from 'react'\r\n// import Button from \"@mui/material/Button\";\r\n// import TextField from '@mui/material/TextField';\r\n// const HOME = () => {\r\n\r\n// return(\r\n// <>\r\n  \r\n  \r\n//   <div className=\"container\">\r\n//             <div className=\"Input\">\r\n//               <h2 style={{ marginLeft: \"10px\" }}>Loan Calculator Dashboard</h2>\r\n//               <TextField label=\"Loan Amount\" variant=\"outlined\" />\r\n//               <TextField label=\"Interest Rate (%)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\r\n//               <TextField label=\"Loan Tenure (Years)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\r\n//             </div>\r\n\r\n//             <Button className=\"button\" variant=\"contained\" sx={{ marginTop: \"20px\" }}>\r\n//               calculate\r\n//             </Button>\r\n//           </div>\r\n// </>\r\n// );\r\n// }\r\n\r\n// export default HOME;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Button from \"@mui/material/Button\";\r\n// import MenuItem from \"@mui/material/MenuItem\";\r\n// import axios from \"axios\";\r\n\r\n// function HOME() {\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n//   const [exchangeRates, setExchangeRates] = useState({});\r\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n\r\n//   // Fetch exchange rates once on mount\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\r\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\r\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n//   }, []);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount.toFixed(2),\r\n//         principal: principalPayment.toFixed(2),\r\n//         interest: interestPayment.toFixed(2),\r\n//         balance: balance.toFixed(2),\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//   };\r\n\r\n//   const convertedEmi = emi && exchangeRates[selectedCurrency]\r\n//     ? (emi * exchangeRates[selectedCurrency]).toFixed(2)\r\n//     : null;\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: \"900px\", margin: \"50px auto\" }}>\r\n//       <h2>Loan EMI Calculator</h2>\r\n\r\n//       <div style={{ display: \"flex\", gap: \"20px\", marginBottom: \"20px\" }}>\r\n//         <TextField\r\n//           label=\"Loan Amount\"\r\n//           variant=\"outlined\"\r\n//           value={loanAmount}\r\n//           onChange={(e) => setLoanAmount(e.target.value)}\r\n//         />\r\n//         <TextField\r\n//           label=\"Interest Rate (%)\"\r\n//           variant=\"outlined\"\r\n//           value={interestRate}\r\n//           onChange={(e) => setInterestRate(e.target.value)}\r\n//         />\r\n//         <TextField\r\n//           label=\"Loan Tenure (years)\"\r\n//           variant=\"outlined\"\r\n//           value={loanTenure}\r\n//           onChange={(e) => setLoanTenure(e.target.value)}\r\n//         />\r\n//         <TextField\r\n//           select\r\n//           label=\"Currency\"\r\n//           value={selectedCurrency}\r\n//           onChange={(e) => setSelectedCurrency(e.target.value)}\r\n//         >\r\n//           {Object.keys(exchangeRates).map((currency) => (\r\n//             <MenuItem key={currency} value={currency}>\r\n//               {currency}\r\n//             </MenuItem>\r\n//           ))}\r\n//         </TextField>\r\n//       </div>\r\n\r\n//       <Button variant=\"contained\" onClick={calculateEMI}>\r\n//         Calculate EMI\r\n//       </Button>\r\n\r\n//       {emi && (\r\n//         <div style={{ marginTop: \"20px\" }}>\r\n//           <h3>Estimated EMI in INR: ₹{emi}</h3>\r\n//           {convertedEmi && (\r\n//             <h3>\r\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency} {convertedEmi}\r\n//             </h3>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n\r\n//       {amortizationSchedule.length > 0 && (\r\n//         <div style={{ overflowX: \"auto\", marginTop: \"20px\" }}>\r\n//           <table border=\"1\" cellPadding=\"10\" style={{ minWidth: \"600px\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Month</th>\r\n//                 <th>EMI</th>\r\n//                 <th>Principal</th>\r\n//                 <th>Interest</th>\r\n//                 <th>Balance</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {amortizationSchedule.slice(0, 10).map((row) => (\r\n//                 <tr key={row.month}>\r\n//                   <td>{row.month}</td>\r\n//                   <td>{row.emi}</td>\r\n//                   <td>{row.principal}</td>\r\n//                   <td>{row.interest}</td>\r\n//                   <td>{row.balance}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//           {/* Pagination buttons can be added here */}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}