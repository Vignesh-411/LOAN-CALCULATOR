{"ast":null,"code":"var _jsxFileName = \"P:\\\\New folder\\\\model\\\\src\\\\COMPONENTS\\\\HOME.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import FloatingLabelInput from \"../COMPONENTS/FloatingLabelInput.js\";\n\n// function HOME() {\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount.toFixed(2),\n//         principal: principalPayment.toFixed(2),\n//         interest: interestPayment.toFixed(2),\n//         balance: balance.toFixed(2),\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//   };\n\n//   return (\n//     <div style={{ width: \"300px\", margin: \"50px auto\" }}>\n//       <h2>Loan EMI Calculator</h2>\n\n//       <FloatingLabelInput\n//         label=\"Loan Amount\"\n//         value={loanAmount}\n//         onChange={(e) => setLoanAmount(e.target.value)}\n//       />\n//       <FloatingLabelInput\n//         label=\"Interest Rate (%)\"\n//         value={interestRate}\n//         onChange={(e) => setInterestRate(e.target.value)}\n//       />\n//       <FloatingLabelInput\n//         label=\"Loan Tenure (years)\"\n//         value={loanTenure}\n//         onChange={(e) => setLoanTenure(e.target.value)}\n//       />\n\n//       <button onClick={calculateEMI}>Calculate EMI</button>\n\n//       {emi && <h3>Estimated EMI: ₹{emi}</h3>}\n\n//       {amortizationSchedule.length > 0 && (\n//         <table border=\"1\">\n//           <thead>\n//             <tr>\n//               <th>Month</th>\n//               <th>EMI</th>\n//               <th>Principal</th>\n//               <th>Interest</th>\n//               <th>Balance</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {amortizationSchedule.map((row) => (\n//               <tr key={row.month}>\n//                 <td>{row.month}</td>\n//                 <td>{row.emi}</td>\n//                 <td>{row.principal}</td>\n//                 <td>{row.interest}</td>\n//                 <td>{row.balance}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default HOME;\n\n// import React from 'react'\n// import Button from \"@mui/material/Button\";\n// import TextField from '@mui/material/TextField';\n// const HOME = () => {\n\n// return(\n// <>\n\n//   <div className=\"container\">\n//             <div className=\"Input\">\n//               <h2 style={{ marginLeft: \"10px\" }}>Loan Calculator Dashboard</h2>\n//               <TextField label=\"Loan Amount\" variant=\"outlined\" />\n//               <TextField label=\"Interest Rate (%)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\n//               <TextField label=\"Loan Tenure (Years)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\n//             </div>\n\n//             <Button className=\"button\" variant=\"contained\" sx={{ marginTop: \"20px\" }}>\n//               calculate\n//             </Button>\n//           </div>\n// </>\n// );\n// }\n\n// export default HOME;\n\n// import React, { useState, useEffect } from \"react\";\n// import TextField from \"@mui/material/TextField\";\n// import Button from \"@mui/material/Button\";\n// import MenuItem from \"@mui/material/MenuItem\";\n// import axios from \"axios\";\n\n// function HOME() {\n//   const [loanAmount, setLoanAmount] = useState(\"\");\n//   const [interestRate, setInterestRate] = useState(\"\");\n//   const [loanTenure, setLoanTenure] = useState(\"\");\n//   const [emi, setEmi] = useState(null);\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n//   const [exchangeRates, setExchangeRates] = useState({});\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n\n//   // Fetch exchange rates once on mount\n//   useEffect(() => {\n//     axios\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\n//   }, []);\n\n//   const calculateEMI = () => {\n//     const principal = parseFloat(loanAmount);\n//     const rate = parseFloat(interestRate) / 12 / 100;\n//     const tenure = parseFloat(loanTenure) * 12;\n//     const emiAmount =\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\n//       (Math.pow(1 + rate, tenure) - 1);\n\n//     setEmi(emiAmount.toFixed(2));\n\n//     let balance = principal;\n//     let schedule = [];\n//     for (let i = 1; i <= tenure; i++) {\n//       let interestPayment = balance * rate;\n//       let principalPayment = emiAmount - interestPayment;\n//       balance -= principalPayment;\n\n//       schedule.push({\n//         month: i,\n//         emi: emiAmount.toFixed(2),\n//         principal: principalPayment.toFixed(2),\n//         interest: interestPayment.toFixed(2),\n//         balance: balance.toFixed(2),\n//       });\n//     }\n//     setAmortizationSchedule(schedule);\n//   };\n\n//   const convertedEmi = emi && exchangeRates[selectedCurrency]\n//     ? (emi * exchangeRates[selectedCurrency]).toFixed(2)\n//     : null;\n\n//   return (\n//     <div style={{ maxWidth: \"900px\", margin: \"50px auto\" }}>\n//       <h2>Loan EMI Calculator</h2>\n\n//       <div style={{ display: \"flex\", gap: \"20px\", marginBottom: \"20px\" }}>\n//         <TextField\n//           label=\"Loan Amount\"\n//           variant=\"outlined\"\n//           value={loanAmount}\n//           onChange={(e) => setLoanAmount(e.target.value)}\n//         />\n//         <TextField\n//           label=\"Interest Rate (%)\"\n//           variant=\"outlined\"\n//           value={interestRate}\n//           onChange={(e) => setInterestRate(e.target.value)}\n//         />\n//         <TextField\n//           label=\"Loan Tenure (years)\"\n//           variant=\"outlined\"\n//           value={loanTenure}\n//           onChange={(e) => setLoanTenure(e.target.value)}\n//         />\n//         <TextField\n//           select\n//           label=\"Currency\"\n//           value={selectedCurrency}\n//           onChange={(e) => setSelectedCurrency(e.target.value)}\n//         >\n//           {Object.keys(exchangeRates).map((currency) => (\n//             <MenuItem key={currency} value={currency}>\n//               {currency}\n//             </MenuItem>\n//           ))}\n//         </TextField>\n//       </div>\n\n//       <Button variant=\"contained\" onClick={calculateEMI}>\n//         Calculate EMI\n//       </Button>\n\n//       {emi && (\n//         <div style={{ marginTop: \"20px\" }}>\n//           <h3>Estimated EMI in INR: ₹{emi}</h3>\n//           {convertedEmi && (\n//             <h3>\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency} {convertedEmi}\n//             </h3>\n//           )}\n//         </div>\n//       )}\n\n//       {amortizationSchedule.length > 0 && (\n//         <div style={{ overflowX: \"auto\", marginTop: \"20px\" }}>\n//           <table border=\"1\" cellPadding=\"10\" style={{ minWidth: \"600px\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Month</th>\n//                 <th>EMI</th>\n//                 <th>Principal</th>\n//                 <th>Interest</th>\n//                 <th>Balance</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {amortizationSchedule.slice(0, 10).map((row) => (\n//                 <tr key={row.month}>\n//                   <td>{row.month}</td>\n//                   <td>{row.emi}</td>\n//                   <td>{row.principal}</td>\n//                   <td>{row.interest}</td>\n//                   <td>{row.balance}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//           {/* Pagination buttons can be added here */}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default HOME;\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Button, MenuItem, Card, CardContent, Paper, FormControl, InputLabel, Select, Pagination } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HOME() {\n  _s();\n  const [loanAmount, setLoanAmount] = useState(\"\");\n  const [interestRate, setInterestRate] = useState(\"\");\n  const [loanTenure, setLoanTenure] = useState(\"\");\n  const [emi, setEmi] = useState(null);\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\n  useEffect(() => {\n    axios.get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\").then(res => setExchangeRates(res.data.conversion_rates)).catch(err => console.error(\"Error fetching exchange rates:\", err));\n  }, []);\n  const calculateEMI = () => {\n    const principal = parseFloat(loanAmount);\n    const rate = parseFloat(interestRate) / 12 / 100;\n    const tenure = parseFloat(loanTenure) * 12;\n    const emiAmount = principal * rate * Math.pow(1 + rate, tenure) / (Math.pow(1 + rate, tenure) - 1);\n    setEmi(emiAmount.toFixed(2));\n    let balance = principal;\n    let schedule = [];\n    for (let i = 1; i <= tenure; i++) {\n      let interestPayment = balance * rate;\n      let principalPayment = emiAmount - interestPayment;\n      balance -= principalPayment;\n      schedule.push({\n        month: i,\n        emi: emiAmount,\n        principal: principalPayment,\n        interest: interestPayment,\n        balance: balance\n      });\n    }\n    setAmortizationSchedule(schedule);\n    setPage(1);\n  };\n  const handleReset = () => {\n    setLoanAmount(\"\");\n    setInterestRate(\"\");\n    setLoanTenure(\"\");\n    setEmi(null);\n    setAmortizationSchedule([]);\n  };\n  const handleCurrencyChange = e => {\n    setSelectedCurrency(e.target.value);\n  };\n  const handleChangeEntries = e => {\n    setEntriesPerPage(parseInt(e.target.value));\n    setPage(1);\n  };\n  const handlePageChange = (_, value) => {\n    setPage(value);\n  };\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\n  const paginatedEntries = amortizationSchedule.slice((page - 1) * entriesPerPage, page * entriesPerPage);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: \"40px auto\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Loan EMI Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          gap: 2,\n          flexWrap: \"wrap\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Loan Amount\",\n          variant: \"outlined\",\n          value: loanAmount,\n          onChange: e => setLoanAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Interest Rate (%)\",\n          variant: \"outlined\",\n          value: interestRate,\n          onChange: e => setInterestRate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Loan Tenure (years)\",\n          variant: \"outlined\",\n          value: loanTenure,\n          onChange: e => setLoanTenure(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"Currency\",\n          value: selectedCurrency,\n          onChange: handleCurrencyChange,\n          children: Object.keys(exchangeRates).map(currency => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: currency,\n            children: currency\n          }, currency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: calculateEMI,\n        children: \"Calculate EMI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), emi && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Estimated EMI in INR: \\u20B9\", parseFloat(emi).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Estimated EMI in \", selectedCurrency, \": \", selectedCurrency, \" \", (emi * conversionRate).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), amortizationSchedule.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2,\n            flexWrap: \"wrap\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"Amortization Schedule (\", selectedCurrency, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: handleReset,\n            children: \"Reset Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            overflowX: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              minWidth: \"600px\",\n              fontWeight: \"bold\",\n              borderBottom: \"2px solid #000\",\n              paddingY: 1,\n              paddingX: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"EMI (\", selectedCurrency, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Principal (\", selectedCurrency, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Interest (\", selectedCurrency, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Balance (\", selectedCurrency, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              maxHeight: 400,\n              overflowY: \"auto\",\n              paddingX: 2\n            },\n            children: paginatedEntries.map(row => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                paddingY: 1,\n                borderBottom: \"1px solid #ddd\",\n                minWidth: \"600px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: row.month\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: (row.emi * conversionRate).toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: (row.principal * conversionRate).toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: (row.interest * conversionRate).toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"20%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: (row.balance * conversionRate).toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this)]\n            }, row.month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            mt: 3,\n            flexWrap: \"wrap\",\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Entries: \", amortizationSchedule.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Entries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: entriesPerPage,\n                label: \"Entries\",\n                onChange: handleChangeEntries,\n                children: [10, 25, 50, 100].map(num => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              count: totalPages,\n              page: page,\n              onChange: handlePageChange,\n              sx: {\n                backgroundColor: \"\" ? \"white\" : \"##1E1E1E\",\n                borderRadius: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n}\n_s(HOME, \"Q0iyeX+JQsG1S48p2+8V8inBR10=\");\n_c = HOME;\nexport default HOME;\nvar _c;\n$RefreshReg$(_c, \"HOME\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","MenuItem","Card","CardContent","Paper","FormControl","InputLabel","Select","Pagination","axios","jsxDEV","_jsxDEV","HOME","_s","loanAmount","setLoanAmount","interestRate","setInterestRate","loanTenure","setLoanTenure","emi","setEmi","amortizationSchedule","setAmortizationSchedule","exchangeRates","setExchangeRates","selectedCurrency","setSelectedCurrency","entriesPerPage","setEntriesPerPage","page","setPage","totalPages","Math","ceil","length","get","then","res","data","conversion_rates","catch","err","console","error","calculateEMI","principal","parseFloat","rate","tenure","emiAmount","pow","toFixed","balance","schedule","i","interestPayment","principalPayment","push","month","interest","handleReset","handleCurrencyChange","e","target","value","handleChangeEntries","parseInt","handlePageChange","_","conversionRate","paginatedEntries","slice","sx","margin","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","flexWrap","mb","label","onChange","select","Object","keys","map","currency","onClick","mt","justifyContent","alignItems","color","overflowX","minWidth","fontWeight","borderBottom","paddingY","paddingX","width","maxHeight","overflowY","row","size","num","count","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["P:/New folder/model/src/COMPONENTS/HOME.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import FloatingLabelInput from \"../COMPONENTS/FloatingLabelInput.js\";\r\n\r\n// function HOME() {\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount.toFixed(2),\r\n//         principal: principalPayment.toFixed(2),\r\n//         interest: interestPayment.toFixed(2),\r\n//         balance: balance.toFixed(2),\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ width: \"300px\", margin: \"50px auto\" }}>\r\n//       <h2>Loan EMI Calculator</h2>\r\n\r\n//       <FloatingLabelInput\r\n//         label=\"Loan Amount\"\r\n//         value={loanAmount}\r\n//         onChange={(e) => setLoanAmount(e.target.value)}\r\n//       />\r\n//       <FloatingLabelInput\r\n//         label=\"Interest Rate (%)\"\r\n//         value={interestRate}\r\n//         onChange={(e) => setInterestRate(e.target.value)}\r\n//       />\r\n//       <FloatingLabelInput\r\n//         label=\"Loan Tenure (years)\"\r\n//         value={loanTenure}\r\n//         onChange={(e) => setLoanTenure(e.target.value)}\r\n//       />\r\n\r\n//       <button onClick={calculateEMI}>Calculate EMI</button>\r\n\r\n//       {emi && <h3>Estimated EMI: ₹{emi}</h3>}\r\n\r\n//       {amortizationSchedule.length > 0 && (\r\n//         <table border=\"1\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Month</th>\r\n//               <th>EMI</th>\r\n//               <th>Principal</th>\r\n//               <th>Interest</th>\r\n//               <th>Balance</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {amortizationSchedule.map((row) => (\r\n//               <tr key={row.month}>\r\n//                 <td>{row.month}</td>\r\n//                 <td>{row.emi}</td>\r\n//                 <td>{row.principal}</td>\r\n//                 <td>{row.interest}</td>\r\n//                 <td>{row.balance}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\n\r\n// import React from 'react'\r\n// import Button from \"@mui/material/Button\";\r\n// import TextField from '@mui/material/TextField';\r\n// const HOME = () => {\r\n\r\n// return(\r\n// <>\r\n\r\n//   <div className=\"container\">\r\n//             <div className=\"Input\">\r\n//               <h2 style={{ marginLeft: \"10px\" }}>Loan Calculator Dashboard</h2>\r\n//               <TextField label=\"Loan Amount\" variant=\"outlined\" />\r\n//               <TextField label=\"Interest Rate (%)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\r\n//               <TextField label=\"Loan Tenure (Years)\" variant=\"outlined\" sx={{ marginLeft: \"20px\" }}/>\r\n//             </div>\r\n\r\n//             <Button className=\"button\" variant=\"contained\" sx={{ marginTop: \"20px\" }}>\r\n//               calculate\r\n//             </Button>\r\n//           </div>\r\n// </>\r\n// );\r\n// }\r\n\r\n// export default HOME;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Button from \"@mui/material/Button\";\r\n// import MenuItem from \"@mui/material/MenuItem\";\r\n// import axios from \"axios\";\r\n\r\n// function HOME() {\r\n//   const [loanAmount, setLoanAmount] = useState(\"\");\r\n//   const [interestRate, setInterestRate] = useState(\"\");\r\n//   const [loanTenure, setLoanTenure] = useState(\"\");\r\n//   const [emi, setEmi] = useState(null);\r\n//   const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n//   const [exchangeRates, setExchangeRates] = useState({});\r\n//   const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n\r\n//   // Fetch exchange rates once on mount\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\r\n//       .then((res) => setExchangeRates(res.data.conversion_rates))\r\n//       .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n//   }, []);\r\n\r\n//   const calculateEMI = () => {\r\n//     const principal = parseFloat(loanAmount);\r\n//     const rate = parseFloat(interestRate) / 12 / 100;\r\n//     const tenure = parseFloat(loanTenure) * 12;\r\n//     const emiAmount =\r\n//       (principal * rate * Math.pow(1 + rate, tenure)) /\r\n//       (Math.pow(1 + rate, tenure) - 1);\r\n\r\n//     setEmi(emiAmount.toFixed(2));\r\n\r\n//     let balance = principal;\r\n//     let schedule = [];\r\n//     for (let i = 1; i <= tenure; i++) {\r\n//       let interestPayment = balance * rate;\r\n//       let principalPayment = emiAmount - interestPayment;\r\n//       balance -= principalPayment;\r\n\r\n//       schedule.push({\r\n//         month: i,\r\n//         emi: emiAmount.toFixed(2),\r\n//         principal: principalPayment.toFixed(2),\r\n//         interest: interestPayment.toFixed(2),\r\n//         balance: balance.toFixed(2),\r\n//       });\r\n//     }\r\n//     setAmortizationSchedule(schedule);\r\n//   };\r\n\r\n//   const convertedEmi = emi && exchangeRates[selectedCurrency]\r\n//     ? (emi * exchangeRates[selectedCurrency]).toFixed(2)\r\n//     : null;\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: \"900px\", margin: \"50px auto\" }}>\r\n//       <h2>Loan EMI Calculator</h2>\r\n\r\n//       <div style={{ display: \"flex\", gap: \"20px\", marginBottom: \"20px\" }}>\r\n//         <TextField\r\n//           label=\"Loan Amount\"\r\n//           variant=\"outlined\"\r\n//           value={loanAmount}\r\n//           onChange={(e) => setLoanAmount(e.target.value)}\r\n//         />\r\n//         <TextField\r\n//           label=\"Interest Rate (%)\"\r\n//           variant=\"outlined\"\r\n//           value={interestRate}\r\n//           onChange={(e) => setInterestRate(e.target.value)}\r\n//         />\r\n//         <TextField\r\n//           label=\"Loan Tenure (years)\"\r\n//           variant=\"outlined\"\r\n//           value={loanTenure}\r\n//           onChange={(e) => setLoanTenure(e.target.value)}\r\n//         />\r\n//         <TextField\r\n//           select\r\n//           label=\"Currency\"\r\n//           value={selectedCurrency}\r\n//           onChange={(e) => setSelectedCurrency(e.target.value)}\r\n//         >\r\n//           {Object.keys(exchangeRates).map((currency) => (\r\n//             <MenuItem key={currency} value={currency}>\r\n//               {currency}\r\n//             </MenuItem>\r\n//           ))}\r\n//         </TextField>\r\n//       </div>\r\n\r\n//       <Button variant=\"contained\" onClick={calculateEMI}>\r\n//         Calculate EMI\r\n//       </Button>\r\n\r\n//       {emi && (\r\n//         <div style={{ marginTop: \"20px\" }}>\r\n//           <h3>Estimated EMI in INR: ₹{emi}</h3>\r\n//           {convertedEmi && (\r\n//             <h3>\r\n//               Estimated EMI in {selectedCurrency}: {selectedCurrency} {convertedEmi}\r\n//             </h3>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n\r\n//       {amortizationSchedule.length > 0 && (\r\n//         <div style={{ overflowX: \"auto\", marginTop: \"20px\" }}>\r\n//           <table border=\"1\" cellPadding=\"10\" style={{ minWidth: \"600px\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Month</th>\r\n//                 <th>EMI</th>\r\n//                 <th>Principal</th>\r\n//                 <th>Interest</th>\r\n//                 <th>Balance</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {amortizationSchedule.slice(0, 10).map((row) => (\r\n//                 <tr key={row.month}>\r\n//                   <td>{row.month}</td>\r\n//                   <td>{row.emi}</td>\r\n//                   <td>{row.principal}</td>\r\n//                   <td>{row.interest}</td>\r\n//                   <td>{row.balance}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//           {/* Pagination buttons can be added here */}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default HOME;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Pagination,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nfunction HOME() {\r\n  const [loanAmount, setLoanAmount] = useState(\"\");\r\n  const [interestRate, setInterestRate] = useState(\"\");\r\n  const [loanTenure, setLoanTenure] = useState(\"\");\r\n  const [emi, setEmi] = useState(null);\r\n  const [amortizationSchedule, setAmortizationSchedule] = useState([]);\r\n  const [exchangeRates, setExchangeRates] = useState({});\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const totalPages = Math.ceil(amortizationSchedule.length / entriesPerPage);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://v6.exchangerate-api.com/v6/77e571783ee71eebfe494ac5/latest/INR\")\r\n      .then((res) => setExchangeRates(res.data.conversion_rates))\r\n      .catch((err) => console.error(\"Error fetching exchange rates:\", err));\r\n  }, []);\r\n\r\n  const calculateEMI = () => {\r\n    const principal = parseFloat(loanAmount);\r\n    const rate = parseFloat(interestRate) / 12 / 100;\r\n    const tenure = parseFloat(loanTenure) * 12;\r\n    const emiAmount =\r\n      (principal * rate * Math.pow(1 + rate, tenure)) /\r\n      (Math.pow(1 + rate, tenure) - 1);\r\n\r\n    setEmi(emiAmount.toFixed(2));\r\n\r\n    let balance = principal;\r\n    let schedule = [];\r\n    for (let i = 1; i <= tenure; i++) {\r\n      let interestPayment = balance * rate;\r\n      let principalPayment = emiAmount - interestPayment;\r\n      balance -= principalPayment;\r\n\r\n      schedule.push({\r\n        month: i,\r\n        emi: emiAmount,\r\n        principal: principalPayment,\r\n        interest: interestPayment,\r\n        balance: balance,\r\n      });\r\n    }\r\n    setAmortizationSchedule(schedule);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setLoanAmount(\"\");\r\n    setInterestRate(\"\");\r\n    setLoanTenure(\"\");\r\n    setEmi(null);\r\n    setAmortizationSchedule([]);\r\n  };\r\n\r\n  const handleCurrencyChange = (e) => {\r\n    setSelectedCurrency(e.target.value);\r\n  };\r\n\r\n  const handleChangeEntries = (e) => {\r\n    setEntriesPerPage(parseInt(e.target.value));\r\n    setPage(1);\r\n  };\r\n\r\n  const handlePageChange = (_, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const conversionRate = exchangeRates[selectedCurrency] || 1;\r\n\r\n  const paginatedEntries = amortizationSchedule.slice(\r\n    (page - 1) * entriesPerPage,\r\n    page * entriesPerPage\r\n  );\r\n\r\n  return (\r\n    <Card sx={{ margin: \"40px auto\", padding: \"20px\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Loan EMI Calculator\r\n        </Typography>\r\n\r\n        <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\", mb: 2 }}>\r\n          <TextField\r\n            label=\"Loan Amount\"\r\n            variant=\"outlined\"\r\n            value={loanAmount}\r\n            onChange={(e) => setLoanAmount(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Interest Rate (%)\"\r\n            variant=\"outlined\"\r\n            value={interestRate}\r\n            onChange={(e) => setInterestRate(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Loan Tenure (years)\"\r\n            variant=\"outlined\"\r\n            value={loanTenure}\r\n            onChange={(e) => setLoanTenure(e.target.value)}\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Currency\"\r\n            value={selectedCurrency}\r\n            onChange={handleCurrencyChange}\r\n          >\r\n            {Object.keys(exchangeRates).map((currency) => (\r\n              <MenuItem key={currency} value={currency}>\r\n                {currency}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n\r\n        <Button variant=\"contained\" onClick={calculateEMI}>\r\n          Calculate EMI\r\n        </Button>\r\n\r\n        {emi && (\r\n          <Box sx={{ mt: 3 }}>\r\n            <Typography variant=\"h6\">\r\n              Estimated EMI in INR: ₹{parseFloat(emi).toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Estimated EMI in {selectedCurrency}: {selectedCurrency}{\" \"}\r\n              {(emi * conversionRate).toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {amortizationSchedule.length > 0 && (\r\n          <Box sx={{ mt: 5 }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mb: 2,\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h5\">\r\n                Amortization Schedule ({selectedCurrency})\r\n              </Typography>\r\n              <Button variant=\"outlined\" color=\"error\" onClick={handleReset}>\r\n                Reset Table\r\n              </Button>\r\n            </Box>\r\n\r\n            <Paper sx={{ overflowX: \"auto\" }}>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  minWidth: \"600px\",\r\n                  fontWeight: \"bold\",\r\n                  borderBottom: \"2px solid #000\",\r\n                  paddingY: 1,\r\n                  paddingX: 2,\r\n                }}\r\n              >\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Month</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>EMI ({selectedCurrency})</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Principal ({selectedCurrency})</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Interest ({selectedCurrency})</Typography>\r\n                </Box>\r\n                <Box sx={{ width: \"20%\" }}>\r\n                  <Typography>Balance ({selectedCurrency})</Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Scrollable table body */}\r\n              <Box\r\n                sx={{\r\n                  maxHeight: 400,\r\n                  overflowY: \"auto\",\r\n                  paddingX: 2,\r\n                }}\r\n              >\r\n                {paginatedEntries.map((row) => (\r\n                  <Box\r\n                    key={row.month}\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      paddingY: 1,\r\n                      borderBottom: \"1px solid #ddd\",\r\n                      minWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>{row.month}</Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>{(row.emi * conversionRate).toFixed(2)}</Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>{(row.principal * conversionRate).toFixed(2)}</Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>{(row.interest * conversionRate).toFixed(2)}</Typography>\r\n                    </Box>\r\n                    <Box sx={{ width: \"20%\" }}>\r\n                      <Typography>{(row.balance * conversionRate).toFixed(2)}</Typography>\r\n                    </Box>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Paper>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                mt: 3,\r\n                flexWrap: \"wrap\",\r\n                gap: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\">\r\n                Total Entries: {amortizationSchedule.length}\r\n              </Typography>\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n                <FormControl size=\"small\">\r\n                  <InputLabel>Entries</InputLabel>\r\n                  <Select\r\n                    value={entriesPerPage}\r\n                    label=\"Entries\"\r\n                    onChange={handleChangeEntries}\r\n                  >\r\n                    {[10, 25, 50, 100].map((num) => (\r\n                      <MenuItem key={num} value={num}>\r\n                        {num}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <Pagination\r\n                  count={totalPages}\r\n                  page={page}\r\n                  onChange={handlePageChange}\r\n                  sx={{ backgroundColor: \"\"?\"white\": \"##1E1E1E\", borderRadius: 1 }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HOME;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}